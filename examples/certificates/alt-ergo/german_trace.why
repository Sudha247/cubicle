type state = Invalid | Shared | Exclusive
type msg = Empty | Reqs | Reqe | Inv | Invack | Gnts | Gnte

logic Exgntd : bool
logic Curcmd : msg
logic CurClient : int
logic Exgntd' : bool
logic Curcmd' : msg
logic CurClient' : int
logic Chan1 : int -> msg
logic Chan2 : int -> msg
logic Chan3 : int -> msg
logic Cache : int -> state
logic Invset : int -> bool
logic Shrset : int -> bool
logic Chan1' : int -> msg
logic Chan2' : int -> msg
logic Chan3' : int -> msg
logic Cache' : int -> state
logic Invset' : int -> bool
logic Shrset' : int -> bool

goal initialisation:
(* init *)
(forall z:int. (Exgntd = false and
Curcmd = Empty and
Chan1(z) = Empty and
Chan2(z) = Empty and
Chan3(z) = Empty and
Cache(z) = Invalid and
Invset(z) = false and
Shrset(z) = false))

->

(* invariant *)
(not (exists z1:int. Invset(z1) = true and
Shrset(z1) = false) and
not (exists z1:int. Cache(z1) <> Invalid and
Shrset(z1) = false) and
not (exists z1,z2:int. z1 <> z2 and Cache(z1) = Exclusive and
Shrset(z2) = true) and
not (exists z1,z2:int. z1 <> z2 and Cache(z1) = Exclusive and
Invset(z2) = true) and
not (exists z1,z2:int. z1 <> z2 and Cache(z1) = Exclusive and
Cache(z2) <> Invalid) and
not (exists z1,z2:int. z1 <> z2 and Chan3(z2) = Invack and
Cache(z1) = Exclusive) and
not (exists z1:int. Chan3(z1) = Invack and
Shrset(z1) = false) and
not (exists z1:int. Chan3(z1) = Invack and
Invset(z1) = true) and
not (exists z1:int. Chan3(z1) = Invack and
Cache(z1) <> Invalid) and
not (exists z1:int. Chan3(z1) = Invack and
Cache(z1) = Exclusive) and
not (exists z1,z2:int. z1 <> z2 and Chan2(z2) = Gnts and
Cache(z1) = Exclusive) and
not (exists z1,z2:int. z1 <> z2 and Chan2(z2) = Inv and
Cache(z1) = Exclusive) and
not (exists z1,z2:int. z1 <> z2 and Chan2(z1) = Gnte and
Shrset(z2) = true) and
not (exists z1:int. Chan2(z1) = Gnte and
Shrset(z1) = false) and
not (exists z1,z2:int. z1 <> z2 and Chan2(z1) = Gnte and
Invset(z2) = true) and
not (exists z1,z2:int. z1 <> z2 and Chan2(z1) = Gnte and
Cache(z2) <> Invalid) and
not (exists z1,z2:int. z1 <> z2 and Chan2(z1) = Gnte and
Chan3(z2) = Invack) and
not (exists z1:int. Chan2(z1) = Gnte and
Chan3(z1) = Invack) and
not (exists z1,z2:int. z1 <> z2 and Chan2(z1) = Gnte and
Chan2(z2) = Gnte) and
not (exists z1,z2:int. z1 <> z2 and Chan2(z1) = Gnte and
Chan2(z2) = Gnts) and
not (exists z1,z2:int. z1 <> z2 and Chan2(z1) = Gnte and
Chan2(z2) = Inv) and
not (exists z1:int. Chan2(z1) = Gnts and
Shrset(z1) = false) and
not (exists z1:int. Chan2(z1) = Gnts and
Chan3(z1) = Invack) and
not (exists z1:int. Chan2(z1) = Inv and
Shrset(z1) = false) and
not (exists z1:int. Chan2(z1) = Inv and
Invset(z1) = true) and
not (exists z1:int. Chan2(z1) = Inv and
Chan3(z1) = Invack) and
not (exists z1,z2:int. z1 <> z2 and Curcmd = Reqs and
Chan3(z1) = Invack and
Chan3(z2) = Invack) and
not (exists z1,z2:int. z1 <> z2 and Curcmd = Reqs and
Chan2(z1) = Inv and
Chan3(z2) = Invack) and
not (exists z1,z2:int. z1 <> z2 and Curcmd = Reqs and
Chan2(z1) = Inv and
Chan2(z2) = Inv and
Chan3(z2) = Empty) and
not (exists z1:int. Curcmd = Empty and
Chan3(z1) = Invack) and
not (exists z1:int. Curcmd = Empty and
Chan2(z1) = Inv) and
not (exists z1:int. Exgntd = false and
Cache(z1) = Exclusive) and
not (exists z1:int. Exgntd = false and
Chan2(z1) = Gnte) and
not (exists z1:int. Exgntd = false and
Curcmd = Reqs and
Chan3(z1) = Invack) and
not (exists z1:int. Exgntd = false and
Curcmd = Reqs and
Chan2(z1) = Inv) and
not (exists z1:int. Exgntd = true and
Chan2(z1) = Gnts) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Reqs and
Chan2(z1) = Inv and
Chan2(z2) = Empty and
Chan3(z2) = Empty and
Invset(z2) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Reqs and
Chan2(z1) = Empty and
Chan3(z2) = Invack and
Invset(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Reqs and
Chan2(z1) = Empty and
Chan2(z2) = Inv and
Chan3(z2) = Empty and
Invset(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Reqs and
Chan2(z1) = Empty and
Chan2(z2) = Empty and
Chan3(z2) = Empty and
Invset(z1) = true and
Invset(z2) = true) and
not (exists z1,z2,z3:int. z2 <> z3 and z1 <> z3 and z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1(z3) = Reqs and
Chan2(z1) = Empty and
Chan2(z2) = Empty and
Chan3(z2) = Empty and
Shrset(z1) = true and
Shrset(z2) = true) and
not (exists z1,z2,z3:int. z2 <> z3 and z1 <> z3 and z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1(z3) = Empty and
Chan2(z1) = Empty and
Chan2(z2) = Empty and
Chan3(z2) = Empty and
Cache(z3) = Invalid and
Shrset(z1) = true and
Shrset(z2) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1(z2) = Reqs and
Chan2(z1) = Empty and
Chan2(z2) = Empty and
Chan3(z2) = Empty and
Shrset(z1) = true and
Shrset(z2) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1(z2) = Empty and
Chan2(z1) = Empty and
Chan2(z2) = Empty and
Chan3(z2) = Empty and
Cache(z2) = Invalid and
Shrset(z1) = true and
Shrset(z2) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1(z1) = Reqs and
Chan2(z1) = Empty and
Chan2(z2) = Empty and
Chan3(z2) = Empty and
Shrset(z1) = true and
Shrset(z2) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1(z1) = Empty and
Chan2(z1) = Empty and
Chan2(z2) = Empty and
Chan3(z2) = Empty and
Cache(z1) = Invalid and
Shrset(z1) = true and
Shrset(z2) = true))


goal property:
(* invariant *)
(not (exists z1:int. Invset(z1) = true and
Shrset(z1) = false) and
not (exists z1:int. Cache(z1) <> Invalid and
Shrset(z1) = false) and
not (exists z1,z2:int. z1 <> z2 and Cache(z1) = Exclusive and
Shrset(z2) = true) and
not (exists z1,z2:int. z1 <> z2 and Cache(z1) = Exclusive and
Invset(z2) = true) and
not (exists z1,z2:int. z1 <> z2 and Cache(z1) = Exclusive and
Cache(z2) <> Invalid) and
not (exists z1,z2:int. z1 <> z2 and Chan3(z2) = Invack and
Cache(z1) = Exclusive) and
not (exists z1:int. Chan3(z1) = Invack and
Shrset(z1) = false) and
not (exists z1:int. Chan3(z1) = Invack and
Invset(z1) = true) and
not (exists z1:int. Chan3(z1) = Invack and
Cache(z1) <> Invalid) and
not (exists z1:int. Chan3(z1) = Invack and
Cache(z1) = Exclusive) and
not (exists z1,z2:int. z1 <> z2 and Chan2(z2) = Gnts and
Cache(z1) = Exclusive) and
not (exists z1,z2:int. z1 <> z2 and Chan2(z2) = Inv and
Cache(z1) = Exclusive) and
not (exists z1,z2:int. z1 <> z2 and Chan2(z1) = Gnte and
Shrset(z2) = true) and
not (exists z1:int. Chan2(z1) = Gnte and
Shrset(z1) = false) and
not (exists z1,z2:int. z1 <> z2 and Chan2(z1) = Gnte and
Invset(z2) = true) and
not (exists z1,z2:int. z1 <> z2 and Chan2(z1) = Gnte and
Cache(z2) <> Invalid) and
not (exists z1,z2:int. z1 <> z2 and Chan2(z1) = Gnte and
Chan3(z2) = Invack) and
not (exists z1:int. Chan2(z1) = Gnte and
Chan3(z1) = Invack) and
not (exists z1,z2:int. z1 <> z2 and Chan2(z1) = Gnte and
Chan2(z2) = Gnte) and
not (exists z1,z2:int. z1 <> z2 and Chan2(z1) = Gnte and
Chan2(z2) = Gnts) and
not (exists z1,z2:int. z1 <> z2 and Chan2(z1) = Gnte and
Chan2(z2) = Inv) and
not (exists z1:int. Chan2(z1) = Gnts and
Shrset(z1) = false) and
not (exists z1:int. Chan2(z1) = Gnts and
Chan3(z1) = Invack) and
not (exists z1:int. Chan2(z1) = Inv and
Shrset(z1) = false) and
not (exists z1:int. Chan2(z1) = Inv and
Invset(z1) = true) and
not (exists z1:int. Chan2(z1) = Inv and
Chan3(z1) = Invack) and
not (exists z1,z2:int. z1 <> z2 and Curcmd = Reqs and
Chan3(z1) = Invack and
Chan3(z2) = Invack) and
not (exists z1,z2:int. z1 <> z2 and Curcmd = Reqs and
Chan2(z1) = Inv and
Chan3(z2) = Invack) and
not (exists z1,z2:int. z1 <> z2 and Curcmd = Reqs and
Chan2(z1) = Inv and
Chan2(z2) = Inv and
Chan3(z2) = Empty) and
not (exists z1:int. Curcmd = Empty and
Chan3(z1) = Invack) and
not (exists z1:int. Curcmd = Empty and
Chan2(z1) = Inv) and
not (exists z1:int. Exgntd = false and
Cache(z1) = Exclusive) and
not (exists z1:int. Exgntd = false and
Chan2(z1) = Gnte) and
not (exists z1:int. Exgntd = false and
Curcmd = Reqs and
Chan3(z1) = Invack) and
not (exists z1:int. Exgntd = false and
Curcmd = Reqs and
Chan2(z1) = Inv) and
not (exists z1:int. Exgntd = true and
Chan2(z1) = Gnts) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Reqs and
Chan2(z1) = Inv and
Chan2(z2) = Empty and
Chan3(z2) = Empty and
Invset(z2) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Reqs and
Chan2(z1) = Empty and
Chan3(z2) = Invack and
Invset(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Reqs and
Chan2(z1) = Empty and
Chan2(z2) = Inv and
Chan3(z2) = Empty and
Invset(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Reqs and
Chan2(z1) = Empty and
Chan2(z2) = Empty and
Chan3(z2) = Empty and
Invset(z1) = true and
Invset(z2) = true) and
not (exists z1,z2,z3:int. z2 <> z3 and z1 <> z3 and z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1(z3) = Reqs and
Chan2(z1) = Empty and
Chan2(z2) = Empty and
Chan3(z2) = Empty and
Shrset(z1) = true and
Shrset(z2) = true) and
not (exists z1,z2,z3:int. z2 <> z3 and z1 <> z3 and z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1(z3) = Empty and
Chan2(z1) = Empty and
Chan2(z2) = Empty and
Chan3(z2) = Empty and
Cache(z3) = Invalid and
Shrset(z1) = true and
Shrset(z2) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1(z2) = Reqs and
Chan2(z1) = Empty and
Chan2(z2) = Empty and
Chan3(z2) = Empty and
Shrset(z1) = true and
Shrset(z2) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1(z2) = Empty and
Chan2(z1) = Empty and
Chan2(z2) = Empty and
Chan3(z2) = Empty and
Cache(z2) = Invalid and
Shrset(z1) = true and
Shrset(z2) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1(z1) = Reqs and
Chan2(z1) = Empty and
Chan2(z2) = Empty and
Chan3(z2) = Empty and
Shrset(z1) = true and
Shrset(z2) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1(z1) = Empty and
Chan2(z1) = Empty and
Chan2(z2) = Empty and
Chan3(z2) = Empty and
Cache(z1) = Invalid and
Shrset(z1) = true and
Shrset(z2) = true))

->

(* property *)
(not (exists z1,z2:int. z1 <> z2 and Cache(z1) = Exclusive and
Cache(z2) <> Invalid))


axiom induction_hypothesis:
(* invariant before *)
(not (exists z1:int. Invset(z1) = true and
Shrset(z1) = false) and
not (exists z1:int. Cache(z1) <> Invalid and
Shrset(z1) = false) and
not (exists z1,z2:int. z1 <> z2 and Cache(z1) = Exclusive and
Shrset(z2) = true) and
not (exists z1,z2:int. z1 <> z2 and Cache(z1) = Exclusive and
Invset(z2) = true) and
not (exists z1,z2:int. z1 <> z2 and Cache(z1) = Exclusive and
Cache(z2) <> Invalid) and
not (exists z1,z2:int. z1 <> z2 and Chan3(z2) = Invack and
Cache(z1) = Exclusive) and
not (exists z1:int. Chan3(z1) = Invack and
Shrset(z1) = false) and
not (exists z1:int. Chan3(z1) = Invack and
Invset(z1) = true) and
not (exists z1:int. Chan3(z1) = Invack and
Cache(z1) <> Invalid) and
not (exists z1:int. Chan3(z1) = Invack and
Cache(z1) = Exclusive) and
not (exists z1,z2:int. z1 <> z2 and Chan2(z2) = Gnts and
Cache(z1) = Exclusive) and
not (exists z1,z2:int. z1 <> z2 and Chan2(z2) = Inv and
Cache(z1) = Exclusive) and
not (exists z1,z2:int. z1 <> z2 and Chan2(z1) = Gnte and
Shrset(z2) = true) and
not (exists z1:int. Chan2(z1) = Gnte and
Shrset(z1) = false) and
not (exists z1,z2:int. z1 <> z2 and Chan2(z1) = Gnte and
Invset(z2) = true) and
not (exists z1,z2:int. z1 <> z2 and Chan2(z1) = Gnte and
Cache(z2) <> Invalid) and
not (exists z1,z2:int. z1 <> z2 and Chan2(z1) = Gnte and
Chan3(z2) = Invack) and
not (exists z1:int. Chan2(z1) = Gnte and
Chan3(z1) = Invack) and
not (exists z1,z2:int. z1 <> z2 and Chan2(z1) = Gnte and
Chan2(z2) = Gnte) and
not (exists z1,z2:int. z1 <> z2 and Chan2(z1) = Gnte and
Chan2(z2) = Gnts) and
not (exists z1,z2:int. z1 <> z2 and Chan2(z1) = Gnte and
Chan2(z2) = Inv) and
not (exists z1:int. Chan2(z1) = Gnts and
Shrset(z1) = false) and
not (exists z1:int. Chan2(z1) = Gnts and
Chan3(z1) = Invack) and
not (exists z1:int. Chan2(z1) = Inv and
Shrset(z1) = false) and
not (exists z1:int. Chan2(z1) = Inv and
Invset(z1) = true) and
not (exists z1:int. Chan2(z1) = Inv and
Chan3(z1) = Invack) and
not (exists z1,z2:int. z1 <> z2 and Curcmd = Reqs and
Chan3(z1) = Invack and
Chan3(z2) = Invack) and
not (exists z1,z2:int. z1 <> z2 and Curcmd = Reqs and
Chan2(z1) = Inv and
Chan3(z2) = Invack) and
not (exists z1,z2:int. z1 <> z2 and Curcmd = Reqs and
Chan2(z1) = Inv and
Chan2(z2) = Inv and
Chan3(z2) = Empty) and
not (exists z1:int. Curcmd = Empty and
Chan3(z1) = Invack) and
not (exists z1:int. Curcmd = Empty and
Chan2(z1) = Inv) and
not (exists z1:int. Exgntd = false and
Cache(z1) = Exclusive) and
not (exists z1:int. Exgntd = false and
Chan2(z1) = Gnte) and
not (exists z1:int. Exgntd = false and
Curcmd = Reqs and
Chan3(z1) = Invack) and
not (exists z1:int. Exgntd = false and
Curcmd = Reqs and
Chan2(z1) = Inv) and
not (exists z1:int. Exgntd = true and
Chan2(z1) = Gnts) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Reqs and
Chan2(z1) = Inv and
Chan2(z2) = Empty and
Chan3(z2) = Empty and
Invset(z2) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Reqs and
Chan2(z1) = Empty and
Chan3(z2) = Invack and
Invset(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Reqs and
Chan2(z1) = Empty and
Chan2(z2) = Inv and
Chan3(z2) = Empty and
Invset(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Reqs and
Chan2(z1) = Empty and
Chan2(z2) = Empty and
Chan3(z2) = Empty and
Invset(z1) = true and
Invset(z2) = true) and
not (exists z1,z2,z3:int. z2 <> z3 and z1 <> z3 and z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1(z3) = Reqs and
Chan2(z1) = Empty and
Chan2(z2) = Empty and
Chan3(z2) = Empty and
Shrset(z1) = true and
Shrset(z2) = true) and
not (exists z1,z2,z3:int. z2 <> z3 and z1 <> z3 and z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1(z3) = Empty and
Chan2(z1) = Empty and
Chan2(z2) = Empty and
Chan3(z2) = Empty and
Cache(z3) = Invalid and
Shrset(z1) = true and
Shrset(z2) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1(z2) = Reqs and
Chan2(z1) = Empty and
Chan2(z2) = Empty and
Chan3(z2) = Empty and
Shrset(z1) = true and
Shrset(z2) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1(z2) = Empty and
Chan2(z1) = Empty and
Chan2(z2) = Empty and
Chan3(z2) = Empty and
Cache(z2) = Invalid and
Shrset(z1) = true and
Shrset(z2) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1(z1) = Reqs and
Chan2(z1) = Empty and
Chan2(z2) = Empty and
Chan3(z2) = Empty and
Shrset(z1) = true and
Shrset(z2) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1(z1) = Empty and
Chan2(z1) = Empty and
Chan2(z2) = Empty and
Chan3(z2) = Empty and
Cache(z1) = Invalid and
Shrset(z1) = true and
Shrset(z2) = true))


axiom transition_realtion:
( (* Transition Relation *)
(* transition send_req_shared *)
(exists n:int. 
( (* requires *)
Chan1(n) = Empty and
Cache(n) = Invalid) and
( (* actions *)
Exgntd' = Exgntd and
Curcmd' = Curcmd and
CurClient' = CurClient and
forall z1:int.
(((z1 = n) -> Chan1'(z1) = Reqs) and
(not (z1 = n) -> Chan1'(z1) = Chan1(z1))) and
(Chan2'(z1) = Chan2(z1)) and
(Chan3'(z1) = Chan3(z1)) and
(Cache'(z1) = Cache(z1)) and
(Invset'(z1) = Invset(z1)) and
(Shrset'(z1) = Shrset(z1)) ))


or

(* transition send_req_exclusive_1 *)
(exists n:int. 
( (* requires *)
Chan1(n) = Empty and
Cache(n) = Invalid) and
( (* actions *)
Exgntd' = Exgntd and
Curcmd' = Curcmd and
CurClient' = CurClient and
forall z1:int.
(((z1 = n) -> Chan1'(z1) = Reqe) and
(not (z1 = n) -> Chan1'(z1) = Chan1(z1))) and
(Chan2'(z1) = Chan2(z1)) and
(Chan3'(z1) = Chan3(z1)) and
(Cache'(z1) = Cache(z1)) and
(Invset'(z1) = Invset(z1)) and
(Shrset'(z1) = Shrset(z1)) ))


or

(* transition send_req_exclusive_2 *)
(exists n:int. 
( (* requires *)
Chan1(n) = Empty and
Cache(n) = Shared) and
( (* actions *)
Exgntd' = Exgntd and
Curcmd' = Curcmd and
CurClient' = CurClient and
forall z1:int.
(((z1 = n) -> Chan1'(z1) = Reqe) and
(not (z1 = n) -> Chan1'(z1) = Chan1(z1))) and
(Chan2'(z1) = Chan2(z1)) and
(Chan3'(z1) = Chan3(z1)) and
(Cache'(z1) = Cache(z1)) and
(Invset'(z1) = Invset(z1)) and
(Shrset'(z1) = Shrset(z1)) ))


or

(* transition recv_req_shared *)
(exists n:int. 
( (* requires *)
Curcmd = Empty and
Chan1(n) = Reqs) and
( (* actions *)
Curcmd' = Reqs and
CurClient' = n and
Exgntd' = Exgntd and
forall z1:int.
(Invset'(z1) = Shrset(z1)) and
(((z1 = n) -> Chan1'(z1) = Empty) and
(not (z1 = n) -> Chan1'(z1) = Chan1(z1))) and
(Chan2'(z1) = Chan2(z1)) and
(Chan3'(z1) = Chan3(z1)) and
(Cache'(z1) = Cache(z1)) and
(Shrset'(z1) = Shrset(z1)) ))


or

(* transition recv_req_exclusive *)
(exists n:int. 
( (* requires *)
Curcmd = Empty and
Chan1(n) = Reqe) and
( (* actions *)
Curcmd' = Reqe and
CurClient' = n and
Exgntd' = Exgntd and
forall z1:int.
(Invset'(z1) = Shrset(z1)) and
(((z1 = n) -> Chan1'(z1) = Empty) and
(not (z1 = n) -> Chan1'(z1) = Chan1(z1))) and
(Chan2'(z1) = Chan2(z1)) and
(Chan3'(z1) = Chan3(z1)) and
(Cache'(z1) = Cache(z1)) and
(Shrset'(z1) = Shrset(z1)) ))


or

(* transition send_inv_1 *)
(exists n:int. 
( (* requires *)
Curcmd = Reqe and
Chan2(n) = Empty and
Invset(n) = true) and
( (* actions *)
Exgntd' = Exgntd and
Curcmd' = Curcmd and
CurClient' = CurClient and
forall z1:int.
(((z1 = n) -> Chan2'(z1) = Inv) and
(not (z1 = n) -> Chan2'(z1) = Chan2(z1))) and
(((z1 = n) -> Invset'(z1) = false) and
(not (z1 = n) -> Invset'(z1) = Invset(z1))) and
(Chan1'(z1) = Chan1(z1)) and
(Chan3'(z1) = Chan3(z1)) and
(Cache'(z1) = Cache(z1)) and
(Shrset'(z1) = Shrset(z1)) ))


or

(* transition send_inv_2 *)
(exists n:int. 
( (* requires *)
Exgntd = true and
Curcmd = Reqs and
Chan2(n) = Empty and
Invset(n) = true) and
( (* actions *)
Exgntd' = Exgntd and
Curcmd' = Curcmd and
CurClient' = CurClient and
forall z1:int.
(((z1 = n) -> Chan2'(z1) = Inv) and
(not (z1 = n) -> Chan2'(z1) = Chan2(z1))) and
(((z1 = n) -> Invset'(z1) = false) and
(not (z1 = n) -> Invset'(z1) = Invset(z1))) and
(Chan1'(z1) = Chan1(z1)) and
(Chan3'(z1) = Chan3(z1)) and
(Cache'(z1) = Cache(z1)) and
(Shrset'(z1) = Shrset(z1)) ))


or

(* transition send_invack *)
(exists n:int. 
( (* requires *)
Chan2(n) = Inv and
Chan3(n) = Empty) and
( (* actions *)
Exgntd' = Exgntd and
Curcmd' = Curcmd and
CurClient' = CurClient and
forall z1:int.
(((z1 = n) -> Chan2'(z1) = Empty) and
(not (z1 = n) -> Chan2'(z1) = Chan2(z1))) and
(((z1 = n) -> Chan3'(z1) = Invack) and
(not (z1 = n) -> Chan3'(z1) = Chan3(z1))) and
(((z1 = n) -> Cache'(z1) = Invalid) and
(not (z1 = n) -> Cache'(z1) = Cache(z1))) and
(Chan1'(z1) = Chan1(z1)) and
(Invset'(z1) = Invset(z1)) and
(Shrset'(z1) = Shrset(z1)) ))


or

(* transition recv_invack *)
(exists n:int. 
( (* requires *)
Curcmd <> Empty and
Chan3(n) = Invack) and
( (* actions *)
Exgntd' = false and
Curcmd' = Curcmd and
CurClient' = CurClient and
forall z1:int.
(((z1 = n) -> Chan3'(z1) = Empty) and
(not (z1 = n) -> Chan3'(z1) = Chan3(z1))) and
(((z1 = n) -> Shrset'(z1) = false) and
(not (z1 = n) -> Shrset'(z1) = Shrset(z1))) and
(Chan1'(z1) = Chan1(z1)) and
(Chan2'(z1) = Chan2(z1)) and
(Cache'(z1) = Cache(z1)) and
(Invset'(z1) = Invset(z1)) ))


or

(* transition send_gnt_shared *)
(exists n:int. 
( (* requires *)
Exgntd = false and
Curcmd = Reqs and
CurClient = n and
Chan2(n) = Empty) and
( (* actions *)
Curcmd' = Empty and
Exgntd' = Exgntd and
CurClient' = CurClient and
forall z1:int.
(((z1 = n) -> Chan2'(z1) = Gnts) and
(not (z1 = n) -> Chan2'(z1) = Chan2(z1))) and
(((z1 = n) -> Shrset'(z1) = true) and
(not (z1 = n) -> Shrset'(z1) = Shrset(z1))) and
(Chan1'(z1) = Chan1(z1)) and
(Chan3'(z1) = Chan3(z1)) and
(Cache'(z1) = Cache(z1)) and
(Invset'(z1) = Invset(z1)) ))


or

(* transition send_gnt_exclusive *)
(exists n:int. 
( (* requires *)
Curcmd = Reqe and
CurClient = n and
Chan2(n) = Empty and
Shrset(n) = false
and (forall j:int.n = j or 
(Shrset(j) = false))
) and
( (* actions *)
Curcmd' = Empty and
Exgntd' = true and
CurClient' = CurClient and
forall z1:int.
(((z1 = n) -> Chan2'(z1) = Gnte) and
(not (z1 = n) -> Chan2'(z1) = Chan2(z1))) and
(((z1 = n) -> Shrset'(z1) = true) and
(not (z1 = n) -> Shrset'(z1) = Shrset(z1))) and
(Chan1'(z1) = Chan1(z1)) and
(Chan3'(z1) = Chan3(z1)) and
(Cache'(z1) = Cache(z1)) and
(Invset'(z1) = Invset(z1)) ))


or

(* transition recv_gnt_shared *)
(exists n:int. 
( (* requires *)
Chan2(n) = Gnts) and
( (* actions *)
Exgntd' = Exgntd and
Curcmd' = Curcmd and
CurClient' = CurClient and
forall z1:int.
(((z1 = n) -> Cache'(z1) = Shared) and
(not (z1 = n) -> Cache'(z1) = Cache(z1))) and
(((z1 = n) -> Chan2'(z1) = Empty) and
(not (z1 = n) -> Chan2'(z1) = Chan2(z1))) and
(Chan1'(z1) = Chan1(z1)) and
(Chan3'(z1) = Chan3(z1)) and
(Invset'(z1) = Invset(z1)) and
(Shrset'(z1) = Shrset(z1)) ))


or

(* transition recv_gnt_exclusive *)
(exists n:int. 
( (* requires *)
Chan2(n) = Gnte) and
( (* actions *)
Exgntd' = Exgntd and
Curcmd' = Curcmd and
CurClient' = CurClient and
forall z1:int.
(((z1 = n) -> Cache'(z1) = Exclusive) and
(not (z1 = n) -> Cache'(z1) = Cache(z1))) and
(((z1 = n) -> Chan2'(z1) = Empty) and
(not (z1 = n) -> Chan2'(z1) = Chan2(z1))) and
(Chan1'(z1) = Chan1(z1)) and
(Chan3'(z1) = Chan3(z1)) and
(Invset'(z1) = Invset(z1)) and
(Shrset'(z1) = Shrset(z1)) ))
)


(* invariant after *)
goal invariant_preserved_1:
not (exists z1:int. Invset'(z1) = true and
Shrset'(z1) = false)

goal invariant_preserved_2:
not (exists z1:int. Cache'(z1) <> Invalid and
Shrset'(z1) = false)

goal invariant_preserved_3:
not (exists z1,z2:int. z1 <> z2 and Cache'(z1) = Exclusive and
Shrset'(z2) = true)

goal invariant_preserved_4:
not (exists z1,z2:int. z1 <> z2 and Cache'(z1) = Exclusive and
Invset'(z2) = true)

goal invariant_preserved_5:
not (exists z1,z2:int. z1 <> z2 and Cache'(z1) = Exclusive and
Cache'(z2) <> Invalid)

goal invariant_preserved_6:
not (exists z1,z2:int. z1 <> z2 and Chan3'(z2) = Invack and
Cache'(z1) = Exclusive)

goal invariant_preserved_7:
not (exists z1:int. Chan3'(z1) = Invack and
Shrset'(z1) = false)

goal invariant_preserved_8:
not (exists z1:int. Chan3'(z1) = Invack and
Invset'(z1) = true)

goal invariant_preserved_9:
not (exists z1:int. Chan3'(z1) = Invack and
Cache'(z1) <> Invalid)

goal invariant_preserved_10:
not (exists z1:int. Chan3'(z1) = Invack and
Cache'(z1) = Exclusive)

goal invariant_preserved_11:
not (exists z1,z2:int. z1 <> z2 and Chan2'(z2) = Gnts and
Cache'(z1) = Exclusive)

goal invariant_preserved_12:
not (exists z1,z2:int. z1 <> z2 and Chan2'(z2) = Inv and
Cache'(z1) = Exclusive)

goal invariant_preserved_13:
not (exists z1,z2:int. z1 <> z2 and Chan2'(z1) = Gnte and
Shrset'(z2) = true)

goal invariant_preserved_14:
not (exists z1:int. Chan2'(z1) = Gnte and
Shrset'(z1) = false)

goal invariant_preserved_15:
not (exists z1,z2:int. z1 <> z2 and Chan2'(z1) = Gnte and
Invset'(z2) = true)

goal invariant_preserved_16:
not (exists z1,z2:int. z1 <> z2 and Chan2'(z1) = Gnte and
Cache'(z2) <> Invalid)

goal invariant_preserved_17:
not (exists z1,z2:int. z1 <> z2 and Chan2'(z1) = Gnte and
Chan3'(z2) = Invack)

goal invariant_preserved_18:
not (exists z1:int. Chan2'(z1) = Gnte and
Chan3'(z1) = Invack)

goal invariant_preserved_19:
not (exists z1,z2:int. z1 <> z2 and Chan2'(z1) = Gnte and
Chan2'(z2) = Gnte)

goal invariant_preserved_20:
not (exists z1,z2:int. z1 <> z2 and Chan2'(z1) = Gnte and
Chan2'(z2) = Gnts)

goal invariant_preserved_21:
not (exists z1,z2:int. z1 <> z2 and Chan2'(z1) = Gnte and
Chan2'(z2) = Inv)

goal invariant_preserved_22:
not (exists z1:int. Chan2'(z1) = Gnts and
Shrset'(z1) = false)

goal invariant_preserved_23:
not (exists z1:int. Chan2'(z1) = Gnts and
Chan3'(z1) = Invack)

goal invariant_preserved_24:
not (exists z1:int. Chan2'(z1) = Inv and
Shrset'(z1) = false)

goal invariant_preserved_25:
not (exists z1:int. Chan2'(z1) = Inv and
Invset'(z1) = true)

goal invariant_preserved_26:
not (exists z1:int. Chan2'(z1) = Inv and
Chan3'(z1) = Invack)

goal invariant_preserved_27:
not (exists z1,z2:int. z1 <> z2 and Curcmd' = Reqs and
Chan3'(z1) = Invack and
Chan3'(z2) = Invack)

goal invariant_preserved_28:
not (exists z1,z2:int. z1 <> z2 and Curcmd' = Reqs and
Chan2'(z1) = Inv and
Chan3'(z2) = Invack)

goal invariant_preserved_29:
not (exists z1,z2:int. z1 <> z2 and Curcmd' = Reqs and
Chan2'(z1) = Inv and
Chan2'(z2) = Inv and
Chan3'(z2) = Empty)

goal invariant_preserved_30:
not (exists z1:int. Curcmd' = Empty and
Chan3'(z1) = Invack)

goal invariant_preserved_31:
not (exists z1:int. Curcmd' = Empty and
Chan2'(z1) = Inv)

goal invariant_preserved_32:
not (exists z1:int. Exgntd' = false and
Cache'(z1) = Exclusive)

goal invariant_preserved_33:
not (exists z1:int. Exgntd' = false and
Chan2'(z1) = Gnte)

goal invariant_preserved_34:
not (exists z1:int. Exgntd' = false and
Curcmd' = Reqs and
Chan3'(z1) = Invack)

goal invariant_preserved_35:
not (exists z1:int. Exgntd' = false and
Curcmd' = Reqs and
Chan2'(z1) = Inv)

goal invariant_preserved_36:
not (exists z1:int. Exgntd' = true and
Chan2'(z1) = Gnts)

goal invariant_preserved_37:
not (exists z1,z2:int. z1 <> z2 and Exgntd' = true and
Curcmd' = Reqs and
Chan2'(z1) = Inv and
Chan2'(z2) = Empty and
Chan3'(z2) = Empty and
Invset'(z2) = true)

goal invariant_preserved_38:
not (exists z1,z2:int. z1 <> z2 and Exgntd' = true and
Curcmd' = Reqs and
Chan2'(z1) = Empty and
Chan3'(z2) = Invack and
Invset'(z1) = true)

goal invariant_preserved_39:
not (exists z1,z2:int. z1 <> z2 and Exgntd' = true and
Curcmd' = Reqs and
Chan2'(z1) = Empty and
Chan2'(z2) = Inv and
Chan3'(z2) = Empty and
Invset'(z1) = true)

goal invariant_preserved_40:
not (exists z1,z2:int. z1 <> z2 and Exgntd' = true and
Curcmd' = Reqs and
Chan2'(z1) = Empty and
Chan2'(z2) = Empty and
Chan3'(z2) = Empty and
Invset'(z1) = true and
Invset'(z2) = true)

goal invariant_preserved_41:
not (exists z1,z2,z3:int. z2 <> z3 and z1 <> z3 and z1 <> z2 and Exgntd' = true and
Curcmd' = Empty and
Chan1'(z3) = Reqs and
Chan2'(z1) = Empty and
Chan2'(z2) = Empty and
Chan3'(z2) = Empty and
Shrset'(z1) = true and
Shrset'(z2) = true)

goal invariant_preserved_42:
not (exists z1,z2,z3:int. z2 <> z3 and z1 <> z3 and z1 <> z2 and Exgntd' = true and
Curcmd' = Empty and
Chan1'(z3) = Empty and
Chan2'(z1) = Empty and
Chan2'(z2) = Empty and
Chan3'(z2) = Empty and
Cache'(z3) = Invalid and
Shrset'(z1) = true and
Shrset'(z2) = true)

goal invariant_preserved_43:
not (exists z1,z2:int. z1 <> z2 and Exgntd' = true and
Curcmd' = Empty and
Chan1'(z2) = Reqs and
Chan2'(z1) = Empty and
Chan2'(z2) = Empty and
Chan3'(z2) = Empty and
Shrset'(z1) = true and
Shrset'(z2) = true)

goal invariant_preserved_44:
not (exists z1,z2:int. z1 <> z2 and Exgntd' = true and
Curcmd' = Empty and
Chan1'(z2) = Empty and
Chan2'(z1) = Empty and
Chan2'(z2) = Empty and
Chan3'(z2) = Empty and
Cache'(z2) = Invalid and
Shrset'(z1) = true and
Shrset'(z2) = true)

goal invariant_preserved_45:
not (exists z1,z2:int. z1 <> z2 and Exgntd' = true and
Curcmd' = Empty and
Chan1'(z1) = Reqs and
Chan2'(z1) = Empty and
Chan2'(z2) = Empty and
Chan3'(z2) = Empty and
Shrset'(z1) = true and
Shrset'(z2) = true)

goal invariant_preserved_46:
not (exists z1,z2:int. z1 <> z2 and Exgntd' = true and
Curcmd' = Empty and
Chan1'(z1) = Empty and
Chan2'(z1) = Empty and
Chan2'(z2) = Empty and
Chan3'(z2) = Empty and
Cache'(z1) = Invalid and
Shrset'(z1) = true and
Shrset'(z2) = true)
