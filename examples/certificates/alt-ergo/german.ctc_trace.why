type state = Invalid | Shared | Exclusive
type msg = Empty | Reqs | Reqe | Inv | Invack | Gnts | Gnte
type data

logic Exgntd : bool
logic Curcmd : msg
logic CurClient : int
logic MemData : data
logic AuxData : data
logic Store_data : data
logic Exgntd' : bool
logic Curcmd' : msg
logic CurClient' : int
logic MemData' : data
logic AuxData' : data
logic Store_data' : data
logic Chan1Cmd : int -> msg
logic Chan1Data : int -> data
logic Chan2Cmd : int -> msg
logic Chan2Data : int -> data
logic Chan3Cmd : int -> msg
logic Chan3Data : int -> data
logic CacheState : int -> state
logic CacheData : int -> data
logic Invset : int -> bool
logic Shrset : int -> bool
logic Chan1Cmd' : int -> msg
logic Chan1Data' : int -> data
logic Chan2Cmd' : int -> msg
logic Chan2Data' : int -> data
logic Chan3Cmd' : int -> msg
logic Chan3Data' : int -> data
logic CacheState' : int -> state
logic CacheData' : int -> data
logic Invset' : int -> bool
logic Shrset' : int -> bool

goal initialisation:
(* init *)
(forall z:int[z]. (Exgntd = false and
Curcmd = Empty and
MemData = AuxData and
Chan1Cmd(z) = Empty and
Chan2Cmd(z) = Empty and
Chan3Cmd(z) = Empty and
CacheState(z) = Invalid and
Invset(z) = false and
Shrset(z) = false))

->

(* invariant *)
(not (exists z1:int. Invset(z1) = true and
Shrset(z1) = false) and
not (exists z1:int. CacheState(z1) <> Invalid and
Shrset(z1) = false) and
not (exists z1:int. CacheState(z1) <> Invalid and
CacheData(z1) <> AuxData) and
not (exists z1,z2:int. z1 <> z2 and CacheState(z1) = Exclusive and
Shrset(z2) = true) and
not (exists z1,z2:int. z1 <> z2 and CacheState(z1) = Exclusive and
Invset(z2) = true) and
not (exists z1,z2:int. z1 <> z2 and CacheState(z1) = Exclusive and
CacheState(z2) <> Invalid) and
not (exists z1,z2:int. z1 <> z2 and Chan3Cmd(z2) = Invack and
CacheState(z1) = Exclusive) and
not (exists z1:int. Chan3Cmd(z1) = Invack and
Shrset(z1) = false) and
not (exists z1:int. Chan3Cmd(z1) = Invack and
Invset(z1) = true) and
not (exists z1:int. Chan3Cmd(z1) = Invack and
CacheState(z1) <> Invalid) and
not (exists z1:int. Chan3Cmd(z1) = Invack and
CacheState(z1) = Exclusive) and
not (exists z1,z2:int. z1 <> z2 and Chan2Cmd(z2) = Gnts and
CacheState(z1) = Exclusive) and
not (exists z1,z2:int. z1 <> z2 and Chan2Cmd(z2) = Inv and
CacheState(z1) = Exclusive) and
not (exists z1,z2:int. z1 <> z2 and Chan2Cmd(z1) = Gnte and
Shrset(z2) = true) and
not (exists z1:int. Chan2Cmd(z1) = Gnte and
Shrset(z1) = false) and
not (exists z1,z2:int. z1 <> z2 and Chan2Cmd(z1) = Gnte and
Invset(z2) = true) and
not (exists z1,z2:int. z1 <> z2 and Chan2Cmd(z1) = Gnte and
CacheState(z2) <> Invalid) and
not (exists z1:int. Chan2Cmd(z1) = Gnte and
CacheState(z1) = Exclusive) and
not (exists z1,z2:int. z1 <> z2 and Chan2Cmd(z1) = Gnte and
Chan3Cmd(z2) = Invack) and
not (exists z1:int. Chan2Cmd(z1) = Gnte and
Chan3Cmd(z1) = Invack) and
not (exists z1:int. Chan2Cmd(z1) = Gnte and
Chan2Data(z1) <> AuxData) and
not (exists z1,z2:int. z1 <> z2 and Chan2Cmd(z1) = Gnte and
Chan2Cmd(z2) = Gnte) and
not (exists z1,z2:int. z1 <> z2 and Chan2Cmd(z1) = Gnte and
Chan2Cmd(z2) = Gnts) and
not (exists z1,z2:int. z1 <> z2 and Chan2Cmd(z1) = Gnte and
Chan2Cmd(z2) = Inv) and
not (exists z1:int. Chan2Cmd(z1) = Gnts and
Shrset(z1) = false) and
not (exists z1:int. Chan2Cmd(z1) = Gnts and
CacheState(z1) = Exclusive) and
not (exists z1:int. Chan2Cmd(z1) = Gnts and
Chan3Cmd(z1) = Invack) and
not (exists z1:int. Chan2Cmd(z1) = Gnts and
Chan2Data(z1) <> AuxData) and
not (exists z1:int. Chan2Cmd(z1) = Inv and
Shrset(z1) = false) and
not (exists z1:int. Chan2Cmd(z1) = Inv and
Invset(z1) = true) and
not (exists z1:int. Chan2Cmd(z1) = Inv and
Chan3Cmd(z1) = Invack) and
not (exists z1:int. Curcmd = Empty and
Chan3Cmd(z1) = Invack) and
not (exists z1:int. Curcmd = Empty and
Chan2Cmd(z1) = Inv) and
not (exists z1:int. Exgntd = false and
CacheState(z1) = Exclusive) and
not (exists z1:int. Exgntd = false and
Chan2Cmd(z1) = Gnte) and
not (Exgntd = false and
MemData <> AuxData) and
not (exists z1:int. Exgntd = false and
Curcmd = Reqs and
Chan3Cmd(z1) = Invack) and
not (exists z1:int. Exgntd = false and
Curcmd = Reqs and
Chan2Cmd(z1) = Inv) and
not (exists z1:int. Exgntd = true and
Chan2Cmd(z1) = Gnts) and
not (exists z1:int. Exgntd = true and
Curcmd <> Empty and
Chan3Cmd(z1) = Invack and
Chan3Data(z1) <> AuxData) and
not (exists z1:int. Exgntd = true and
Curcmd <> Empty and
Chan2Cmd(z1) = Inv and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheData(z1) <> AuxData) and
not (exists z1:int. Exgntd = true and
Curcmd <> Empty and
Chan2Cmd(z1) = Inv and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheState(z1) <> Exclusive) and
not (exists z1:int. Exgntd = true and
Curcmd = Reqe and
Chan2Cmd(z1) = Empty and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheData(z1) <> AuxData and
Invset(z1) = true) and
not (exists z1:int. Exgntd = true and
Curcmd = Reqe and
Chan2Cmd(z1) = Empty and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheState(z1) <> Exclusive and
Invset(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Reqs and
Chan3Cmd(z1) = Invack and
Chan3Cmd(z2) = Invack) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Reqs and
Chan2Cmd(z1) = Inv and
Chan3Cmd(z2) = Invack) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Reqs and
Chan2Cmd(z1) = Inv and
Chan2Cmd(z2) = Inv and
Chan3Cmd(z2) = Empty) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Reqs and
Chan2Cmd(z1) = Inv and
Chan2Cmd(z2) = Empty and
Chan3Cmd(z2) = Empty and
Invset(z2) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Reqs and
Chan2Cmd(z1) = Empty and
Chan3Cmd(z2) = Invack and
Invset(z1) = true) and
not (exists z1:int. Exgntd = true and
Curcmd = Reqs and
Chan2Cmd(z1) = Empty and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheData(z1) <> AuxData and
Invset(z1) = true) and
not (exists z1:int. Exgntd = true and
Curcmd = Reqs and
Chan2Cmd(z1) = Empty and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheState(z1) <> Exclusive and
Invset(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Reqs and
Chan2Cmd(z1) = Empty and
Chan2Cmd(z2) = Inv and
Chan3Cmd(z2) = Empty and
Invset(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Reqs and
Chan2Cmd(z1) = Empty and
Chan2Cmd(z2) = Empty and
Chan3Cmd(z2) = Empty and
Invset(z1) = true and
Invset(z2) = true) and
not (exists z1,z2,z3:int. z2 <> z3 and z1 <> z3 and z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z3) = Reqs and
Chan2Cmd(z1) = Empty and
Chan2Cmd(z2) = Empty and
Chan3Cmd(z2) = Empty and
Shrset(z1) = true and
Shrset(z2) = true) and
not (exists z1,z2,z3:int. z2 <> z3 and z1 <> z3 and z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z3) = Empty and
Chan2Cmd(z1) = Empty and
Chan2Cmd(z2) = Empty and
Chan3Cmd(z2) = Empty and
CacheState(z3) = Invalid and
Shrset(z1) = true and
Shrset(z2) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z2) = Reqe and
Chan2Cmd(z1) = Empty and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheState(z1) <> Exclusive and
Shrset(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z2) = Reqs and
Chan2Cmd(z1) = Empty and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheState(z1) <> Exclusive and
Shrset(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z2) = Reqs and
Chan2Cmd(z1) = Empty and
Chan2Cmd(z2) = Empty and
Chan3Cmd(z2) = Empty and
Shrset(z1) = true and
Shrset(z2) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z2) = Empty and
Chan2Cmd(z1) = Empty and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheState(z1) <> Exclusive and
CacheState(z2) <> Exclusive and
Shrset(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z2) = Empty and
Chan2Cmd(z1) = Empty and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheState(z1) <> Exclusive and
CacheState(z2) = Invalid and
Shrset(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z2) = Empty and
Chan2Cmd(z1) = Empty and
Chan2Cmd(z2) = Empty and
Chan3Cmd(z2) = Empty and
CacheState(z2) = Invalid and
Shrset(z1) = true and
Shrset(z2) = true) and
not (exists z1:int. Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z1) = Reqe and
Chan2Cmd(z1) = Empty and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheData(z1) <> AuxData and
Shrset(z1) = true) and
not (exists z1:int. Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z1) = Reqe and
Chan2Cmd(z1) = Empty and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheState(z1) <> Exclusive and
Shrset(z1) = true) and
not (exists z1:int. Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z1) = Reqs and
Chan2Cmd(z1) = Empty and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheData(z1) <> AuxData and
Shrset(z1) = true) and
not (exists z1:int. Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z1) = Reqs and
Chan2Cmd(z1) = Empty and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheState(z1) <> Exclusive and
Shrset(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z1) = Reqs and
Chan2Cmd(z1) = Empty and
Chan2Cmd(z2) = Empty and
Chan3Cmd(z2) = Empty and
Shrset(z1) = true and
Shrset(z2) = true) and
not (exists z1:int. Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z1) = Empty and
Chan2Cmd(z1) = Empty and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheState(z1) <> Exclusive and
Shrset(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z1) = Empty and
Chan2Cmd(z1) = Empty and
Chan2Cmd(z2) = Empty and
Chan3Cmd(z2) = Empty and
CacheState(z1) = Invalid and
Shrset(z1) = true and
Shrset(z2) = true))


goal property:
(* invariant *)
(not (exists z1:int. Invset(z1) = true and
Shrset(z1) = false) and
not (exists z1:int. CacheState(z1) <> Invalid and
Shrset(z1) = false) and
not (exists z1:int. CacheState(z1) <> Invalid and
CacheData(z1) <> AuxData) and
not (exists z1,z2:int. z1 <> z2 and CacheState(z1) = Exclusive and
Shrset(z2) = true) and
not (exists z1,z2:int. z1 <> z2 and CacheState(z1) = Exclusive and
Invset(z2) = true) and
not (exists z1,z2:int. z1 <> z2 and CacheState(z1) = Exclusive and
CacheState(z2) <> Invalid) and
not (exists z1,z2:int. z1 <> z2 and Chan3Cmd(z2) = Invack and
CacheState(z1) = Exclusive) and
not (exists z1:int. Chan3Cmd(z1) = Invack and
Shrset(z1) = false) and
not (exists z1:int. Chan3Cmd(z1) = Invack and
Invset(z1) = true) and
not (exists z1:int. Chan3Cmd(z1) = Invack and
CacheState(z1) <> Invalid) and
not (exists z1:int. Chan3Cmd(z1) = Invack and
CacheState(z1) = Exclusive) and
not (exists z1,z2:int. z1 <> z2 and Chan2Cmd(z2) = Gnts and
CacheState(z1) = Exclusive) and
not (exists z1,z2:int. z1 <> z2 and Chan2Cmd(z2) = Inv and
CacheState(z1) = Exclusive) and
not (exists z1,z2:int. z1 <> z2 and Chan2Cmd(z1) = Gnte and
Shrset(z2) = true) and
not (exists z1:int. Chan2Cmd(z1) = Gnte and
Shrset(z1) = false) and
not (exists z1,z2:int. z1 <> z2 and Chan2Cmd(z1) = Gnte and
Invset(z2) = true) and
not (exists z1,z2:int. z1 <> z2 and Chan2Cmd(z1) = Gnte and
CacheState(z2) <> Invalid) and
not (exists z1:int. Chan2Cmd(z1) = Gnte and
CacheState(z1) = Exclusive) and
not (exists z1,z2:int. z1 <> z2 and Chan2Cmd(z1) = Gnte and
Chan3Cmd(z2) = Invack) and
not (exists z1:int. Chan2Cmd(z1) = Gnte and
Chan3Cmd(z1) = Invack) and
not (exists z1:int. Chan2Cmd(z1) = Gnte and
Chan2Data(z1) <> AuxData) and
not (exists z1,z2:int. z1 <> z2 and Chan2Cmd(z1) = Gnte and
Chan2Cmd(z2) = Gnte) and
not (exists z1,z2:int. z1 <> z2 and Chan2Cmd(z1) = Gnte and
Chan2Cmd(z2) = Gnts) and
not (exists z1,z2:int. z1 <> z2 and Chan2Cmd(z1) = Gnte and
Chan2Cmd(z2) = Inv) and
not (exists z1:int. Chan2Cmd(z1) = Gnts and
Shrset(z1) = false) and
not (exists z1:int. Chan2Cmd(z1) = Gnts and
CacheState(z1) = Exclusive) and
not (exists z1:int. Chan2Cmd(z1) = Gnts and
Chan3Cmd(z1) = Invack) and
not (exists z1:int. Chan2Cmd(z1) = Gnts and
Chan2Data(z1) <> AuxData) and
not (exists z1:int. Chan2Cmd(z1) = Inv and
Shrset(z1) = false) and
not (exists z1:int. Chan2Cmd(z1) = Inv and
Invset(z1) = true) and
not (exists z1:int. Chan2Cmd(z1) = Inv and
Chan3Cmd(z1) = Invack) and
not (exists z1:int. Curcmd = Empty and
Chan3Cmd(z1) = Invack) and
not (exists z1:int. Curcmd = Empty and
Chan2Cmd(z1) = Inv) and
not (exists z1:int. Exgntd = false and
CacheState(z1) = Exclusive) and
not (exists z1:int. Exgntd = false and
Chan2Cmd(z1) = Gnte) and
not (Exgntd = false and
MemData <> AuxData) and
not (exists z1:int. Exgntd = false and
Curcmd = Reqs and
Chan3Cmd(z1) = Invack) and
not (exists z1:int. Exgntd = false and
Curcmd = Reqs and
Chan2Cmd(z1) = Inv) and
not (exists z1:int. Exgntd = true and
Chan2Cmd(z1) = Gnts) and
not (exists z1:int. Exgntd = true and
Curcmd <> Empty and
Chan3Cmd(z1) = Invack and
Chan3Data(z1) <> AuxData) and
not (exists z1:int. Exgntd = true and
Curcmd <> Empty and
Chan2Cmd(z1) = Inv and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheData(z1) <> AuxData) and
not (exists z1:int. Exgntd = true and
Curcmd <> Empty and
Chan2Cmd(z1) = Inv and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheState(z1) <> Exclusive) and
not (exists z1:int. Exgntd = true and
Curcmd = Reqe and
Chan2Cmd(z1) = Empty and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheData(z1) <> AuxData and
Invset(z1) = true) and
not (exists z1:int. Exgntd = true and
Curcmd = Reqe and
Chan2Cmd(z1) = Empty and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheState(z1) <> Exclusive and
Invset(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Reqs and
Chan3Cmd(z1) = Invack and
Chan3Cmd(z2) = Invack) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Reqs and
Chan2Cmd(z1) = Inv and
Chan3Cmd(z2) = Invack) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Reqs and
Chan2Cmd(z1) = Inv and
Chan2Cmd(z2) = Inv and
Chan3Cmd(z2) = Empty) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Reqs and
Chan2Cmd(z1) = Inv and
Chan2Cmd(z2) = Empty and
Chan3Cmd(z2) = Empty and
Invset(z2) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Reqs and
Chan2Cmd(z1) = Empty and
Chan3Cmd(z2) = Invack and
Invset(z1) = true) and
not (exists z1:int. Exgntd = true and
Curcmd = Reqs and
Chan2Cmd(z1) = Empty and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheData(z1) <> AuxData and
Invset(z1) = true) and
not (exists z1:int. Exgntd = true and
Curcmd = Reqs and
Chan2Cmd(z1) = Empty and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheState(z1) <> Exclusive and
Invset(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Reqs and
Chan2Cmd(z1) = Empty and
Chan2Cmd(z2) = Inv and
Chan3Cmd(z2) = Empty and
Invset(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Reqs and
Chan2Cmd(z1) = Empty and
Chan2Cmd(z2) = Empty and
Chan3Cmd(z2) = Empty and
Invset(z1) = true and
Invset(z2) = true) and
not (exists z1,z2,z3:int. z2 <> z3 and z1 <> z3 and z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z3) = Reqs and
Chan2Cmd(z1) = Empty and
Chan2Cmd(z2) = Empty and
Chan3Cmd(z2) = Empty and
Shrset(z1) = true and
Shrset(z2) = true) and
not (exists z1,z2,z3:int. z2 <> z3 and z1 <> z3 and z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z3) = Empty and
Chan2Cmd(z1) = Empty and
Chan2Cmd(z2) = Empty and
Chan3Cmd(z2) = Empty and
CacheState(z3) = Invalid and
Shrset(z1) = true and
Shrset(z2) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z2) = Reqe and
Chan2Cmd(z1) = Empty and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheState(z1) <> Exclusive and
Shrset(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z2) = Reqs and
Chan2Cmd(z1) = Empty and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheState(z1) <> Exclusive and
Shrset(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z2) = Reqs and
Chan2Cmd(z1) = Empty and
Chan2Cmd(z2) = Empty and
Chan3Cmd(z2) = Empty and
Shrset(z1) = true and
Shrset(z2) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z2) = Empty and
Chan2Cmd(z1) = Empty and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheState(z1) <> Exclusive and
CacheState(z2) <> Exclusive and
Shrset(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z2) = Empty and
Chan2Cmd(z1) = Empty and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheState(z1) <> Exclusive and
CacheState(z2) = Invalid and
Shrset(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z2) = Empty and
Chan2Cmd(z1) = Empty and
Chan2Cmd(z2) = Empty and
Chan3Cmd(z2) = Empty and
CacheState(z2) = Invalid and
Shrset(z1) = true and
Shrset(z2) = true) and
not (exists z1:int. Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z1) = Reqe and
Chan2Cmd(z1) = Empty and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheData(z1) <> AuxData and
Shrset(z1) = true) and
not (exists z1:int. Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z1) = Reqe and
Chan2Cmd(z1) = Empty and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheState(z1) <> Exclusive and
Shrset(z1) = true) and
not (exists z1:int. Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z1) = Reqs and
Chan2Cmd(z1) = Empty and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheData(z1) <> AuxData and
Shrset(z1) = true) and
not (exists z1:int. Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z1) = Reqs and
Chan2Cmd(z1) = Empty and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheState(z1) <> Exclusive and
Shrset(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z1) = Reqs and
Chan2Cmd(z1) = Empty and
Chan2Cmd(z2) = Empty and
Chan3Cmd(z2) = Empty and
Shrset(z1) = true and
Shrset(z2) = true) and
not (exists z1:int. Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z1) = Empty and
Chan2Cmd(z1) = Empty and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheState(z1) <> Exclusive and
Shrset(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z1) = Empty and
Chan2Cmd(z1) = Empty and
Chan2Cmd(z2) = Empty and
Chan3Cmd(z2) = Empty and
CacheState(z1) = Invalid and
Shrset(z1) = true and
Shrset(z2) = true))

->

(* property *)
(not (exists z1,z2:int. z1 <> z2 and CacheState(z1) = Exclusive and
CacheState(z2) <> Invalid) and
not (Exgntd = false and
MemData <> AuxData) and
not (exists z1:int. CacheState(z1) <> Invalid and
CacheData(z1) <> AuxData))


axiom induction_hypothesis:
(* invariant before *)
(not (exists z1:int. Invset(z1) = true and
Shrset(z1) = false) and
not (exists z1:int. CacheState(z1) <> Invalid and
Shrset(z1) = false) and
not (exists z1:int. CacheState(z1) <> Invalid and
CacheData(z1) <> AuxData) and
not (exists z1,z2:int. z1 <> z2 and CacheState(z1) = Exclusive and
Shrset(z2) = true) and
not (exists z1,z2:int. z1 <> z2 and CacheState(z1) = Exclusive and
Invset(z2) = true) and
not (exists z1,z2:int. z1 <> z2 and CacheState(z1) = Exclusive and
CacheState(z2) <> Invalid) and
not (exists z1,z2:int. z1 <> z2 and Chan3Cmd(z2) = Invack and
CacheState(z1) = Exclusive) and
not (exists z1:int. Chan3Cmd(z1) = Invack and
Shrset(z1) = false) and
not (exists z1:int. Chan3Cmd(z1) = Invack and
Invset(z1) = true) and
not (exists z1:int. Chan3Cmd(z1) = Invack and
CacheState(z1) <> Invalid) and
not (exists z1:int. Chan3Cmd(z1) = Invack and
CacheState(z1) = Exclusive) and
not (exists z1,z2:int. z1 <> z2 and Chan2Cmd(z2) = Gnts and
CacheState(z1) = Exclusive) and
not (exists z1,z2:int. z1 <> z2 and Chan2Cmd(z2) = Inv and
CacheState(z1) = Exclusive) and
not (exists z1,z2:int. z1 <> z2 and Chan2Cmd(z1) = Gnte and
Shrset(z2) = true) and
not (exists z1:int. Chan2Cmd(z1) = Gnte and
Shrset(z1) = false) and
not (exists z1,z2:int. z1 <> z2 and Chan2Cmd(z1) = Gnte and
Invset(z2) = true) and
not (exists z1,z2:int. z1 <> z2 and Chan2Cmd(z1) = Gnte and
CacheState(z2) <> Invalid) and
not (exists z1:int. Chan2Cmd(z1) = Gnte and
CacheState(z1) = Exclusive) and
not (exists z1,z2:int. z1 <> z2 and Chan2Cmd(z1) = Gnte and
Chan3Cmd(z2) = Invack) and
not (exists z1:int. Chan2Cmd(z1) = Gnte and
Chan3Cmd(z1) = Invack) and
not (exists z1:int. Chan2Cmd(z1) = Gnte and
Chan2Data(z1) <> AuxData) and
not (exists z1,z2:int. z1 <> z2 and Chan2Cmd(z1) = Gnte and
Chan2Cmd(z2) = Gnte) and
not (exists z1,z2:int. z1 <> z2 and Chan2Cmd(z1) = Gnte and
Chan2Cmd(z2) = Gnts) and
not (exists z1,z2:int. z1 <> z2 and Chan2Cmd(z1) = Gnte and
Chan2Cmd(z2) = Inv) and
not (exists z1:int. Chan2Cmd(z1) = Gnts and
Shrset(z1) = false) and
not (exists z1:int. Chan2Cmd(z1) = Gnts and
CacheState(z1) = Exclusive) and
not (exists z1:int. Chan2Cmd(z1) = Gnts and
Chan3Cmd(z1) = Invack) and
not (exists z1:int. Chan2Cmd(z1) = Gnts and
Chan2Data(z1) <> AuxData) and
not (exists z1:int. Chan2Cmd(z1) = Inv and
Shrset(z1) = false) and
not (exists z1:int. Chan2Cmd(z1) = Inv and
Invset(z1) = true) and
not (exists z1:int. Chan2Cmd(z1) = Inv and
Chan3Cmd(z1) = Invack) and
not (exists z1:int. Curcmd = Empty and
Chan3Cmd(z1) = Invack) and
not (exists z1:int. Curcmd = Empty and
Chan2Cmd(z1) = Inv) and
not (exists z1:int. Exgntd = false and
CacheState(z1) = Exclusive) and
not (exists z1:int. Exgntd = false and
Chan2Cmd(z1) = Gnte) and
not (Exgntd = false and
MemData <> AuxData) and
not (exists z1:int. Exgntd = false and
Curcmd = Reqs and
Chan3Cmd(z1) = Invack) and
not (exists z1:int. Exgntd = false and
Curcmd = Reqs and
Chan2Cmd(z1) = Inv) and
not (exists z1:int. Exgntd = true and
Chan2Cmd(z1) = Gnts) and
not (exists z1:int. Exgntd = true and
Curcmd <> Empty and
Chan3Cmd(z1) = Invack and
Chan3Data(z1) <> AuxData) and
not (exists z1:int. Exgntd = true and
Curcmd <> Empty and
Chan2Cmd(z1) = Inv and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheData(z1) <> AuxData) and
not (exists z1:int. Exgntd = true and
Curcmd <> Empty and
Chan2Cmd(z1) = Inv and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheState(z1) <> Exclusive) and
not (exists z1:int. Exgntd = true and
Curcmd = Reqe and
Chan2Cmd(z1) = Empty and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheData(z1) <> AuxData and
Invset(z1) = true) and
not (exists z1:int. Exgntd = true and
Curcmd = Reqe and
Chan2Cmd(z1) = Empty and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheState(z1) <> Exclusive and
Invset(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Reqs and
Chan3Cmd(z1) = Invack and
Chan3Cmd(z2) = Invack) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Reqs and
Chan2Cmd(z1) = Inv and
Chan3Cmd(z2) = Invack) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Reqs and
Chan2Cmd(z1) = Inv and
Chan2Cmd(z2) = Inv and
Chan3Cmd(z2) = Empty) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Reqs and
Chan2Cmd(z1) = Inv and
Chan2Cmd(z2) = Empty and
Chan3Cmd(z2) = Empty and
Invset(z2) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Reqs and
Chan2Cmd(z1) = Empty and
Chan3Cmd(z2) = Invack and
Invset(z1) = true) and
not (exists z1:int. Exgntd = true and
Curcmd = Reqs and
Chan2Cmd(z1) = Empty and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheData(z1) <> AuxData and
Invset(z1) = true) and
not (exists z1:int. Exgntd = true and
Curcmd = Reqs and
Chan2Cmd(z1) = Empty and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheState(z1) <> Exclusive and
Invset(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Reqs and
Chan2Cmd(z1) = Empty and
Chan2Cmd(z2) = Inv and
Chan3Cmd(z2) = Empty and
Invset(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Reqs and
Chan2Cmd(z1) = Empty and
Chan2Cmd(z2) = Empty and
Chan3Cmd(z2) = Empty and
Invset(z1) = true and
Invset(z2) = true) and
not (exists z1,z2,z3:int. z2 <> z3 and z1 <> z3 and z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z3) = Reqs and
Chan2Cmd(z1) = Empty and
Chan2Cmd(z2) = Empty and
Chan3Cmd(z2) = Empty and
Shrset(z1) = true and
Shrset(z2) = true) and
not (exists z1,z2,z3:int. z2 <> z3 and z1 <> z3 and z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z3) = Empty and
Chan2Cmd(z1) = Empty and
Chan2Cmd(z2) = Empty and
Chan3Cmd(z2) = Empty and
CacheState(z3) = Invalid and
Shrset(z1) = true and
Shrset(z2) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z2) = Reqe and
Chan2Cmd(z1) = Empty and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheState(z1) <> Exclusive and
Shrset(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z2) = Reqs and
Chan2Cmd(z1) = Empty and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheState(z1) <> Exclusive and
Shrset(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z2) = Reqs and
Chan2Cmd(z1) = Empty and
Chan2Cmd(z2) = Empty and
Chan3Cmd(z2) = Empty and
Shrset(z1) = true and
Shrset(z2) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z2) = Empty and
Chan2Cmd(z1) = Empty and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheState(z1) <> Exclusive and
CacheState(z2) <> Exclusive and
Shrset(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z2) = Empty and
Chan2Cmd(z1) = Empty and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheState(z1) <> Exclusive and
CacheState(z2) = Invalid and
Shrset(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z2) = Empty and
Chan2Cmd(z1) = Empty and
Chan2Cmd(z2) = Empty and
Chan3Cmd(z2) = Empty and
CacheState(z2) = Invalid and
Shrset(z1) = true and
Shrset(z2) = true) and
not (exists z1:int. Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z1) = Reqe and
Chan2Cmd(z1) = Empty and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheData(z1) <> AuxData and
Shrset(z1) = true) and
not (exists z1:int. Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z1) = Reqe and
Chan2Cmd(z1) = Empty and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheState(z1) <> Exclusive and
Shrset(z1) = true) and
not (exists z1:int. Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z1) = Reqs and
Chan2Cmd(z1) = Empty and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheData(z1) <> AuxData and
Shrset(z1) = true) and
not (exists z1:int. Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z1) = Reqs and
Chan2Cmd(z1) = Empty and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheState(z1) <> Exclusive and
Shrset(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z1) = Reqs and
Chan2Cmd(z1) = Empty and
Chan2Cmd(z2) = Empty and
Chan3Cmd(z2) = Empty and
Shrset(z1) = true and
Shrset(z2) = true) and
not (exists z1:int. Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z1) = Empty and
Chan2Cmd(z1) = Empty and
Chan3Cmd(z1) = Empty and
Chan3Data(z1) <> AuxData and
CacheState(z1) <> Exclusive and
Shrset(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and Exgntd = true and
Curcmd = Empty and
Chan1Cmd(z1) = Empty and
Chan2Cmd(z1) = Empty and
Chan2Cmd(z2) = Empty and
Chan3Cmd(z2) = Empty and
CacheState(z1) = Invalid and
Shrset(z1) = true and
Shrset(z2) = true))


axiom transition_realtion:
( (* Transition Relation *)
(* transition store *)
(exists n:int. 
( (* requires *)
CacheState(n) = Exclusive) and
( (* actions *)
AuxData' = Store_data and
Exgntd' = Exgntd and
Curcmd' = Curcmd and
CurClient' = CurClient and
MemData' = MemData and
Store_data' = Store_data and
(forall j:int.
((j = n) -> CacheData'(j) = Store_data) and
(not (j = n) -> CacheData'(j) = CacheData(j))) and
(forall z1:int. Chan1Cmd'(z1) = Chan1Cmd(z1)) and
(forall z1:int. Chan1Data'(z1) = Chan1Data(z1)) and
(forall z1:int. Chan2Cmd'(z1) = Chan2Cmd(z1)) and
(forall z1:int. Chan2Data'(z1) = Chan2Data(z1)) and
(forall z1:int. Chan3Cmd'(z1) = Chan3Cmd(z1)) and
(forall z1:int. Chan3Data'(z1) = Chan3Data(z1)) and
(forall z1:int. CacheState'(z1) = CacheState(z1)) and
(forall z1:int. Invset'(z1) = Invset(z1)) and
(forall z1:int. Shrset'(z1) = Shrset(z1)) ))


or

(* transition sendReqs *)
(exists i:int. 
( (* requires *)
Chan1Cmd(i) = Empty and
CacheState(i) = Invalid) and
( (* actions *)
Exgntd' = Exgntd and
Curcmd' = Curcmd and
CurClient' = CurClient and
MemData' = MemData and
AuxData' = AuxData and
Store_data' = Store_data and
(forall _j1:int.
((_j1 = i) -> Chan1Cmd'(_j1) = Reqs) and
(not (_j1 = i) -> Chan1Cmd'(_j1) = Chan1Cmd(_j1))) and
(forall z1:int. Chan1Data'(z1) = Chan1Data(z1)) and
(forall z1:int. Chan2Cmd'(z1) = Chan2Cmd(z1)) and
(forall z1:int. Chan2Data'(z1) = Chan2Data(z1)) and
(forall z1:int. Chan3Cmd'(z1) = Chan3Cmd(z1)) and
(forall z1:int. Chan3Data'(z1) = Chan3Data(z1)) and
(forall z1:int. CacheState'(z1) = CacheState(z1)) and
(forall z1:int. CacheData'(z1) = CacheData(z1)) and
(forall z1:int. Invset'(z1) = Invset(z1)) and
(forall z1:int. Shrset'(z1) = Shrset(z1)) ))


or

(* transition sendReqe *)
(exists i:int. 
( (* requires *)
Chan1Cmd(i) = Empty and
CacheState(i) <> Exclusive) and
( (* actions *)
Exgntd' = Exgntd and
Curcmd' = Curcmd and
CurClient' = CurClient and
MemData' = MemData and
AuxData' = AuxData and
Store_data' = Store_data and
(forall _j2:int.
((_j2 = i) -> Chan1Cmd'(_j2) = Reqe) and
(not (_j2 = i) -> Chan1Cmd'(_j2) = Chan1Cmd(_j2))) and
(forall z1:int. Chan1Data'(z1) = Chan1Data(z1)) and
(forall z1:int. Chan2Cmd'(z1) = Chan2Cmd(z1)) and
(forall z1:int. Chan2Data'(z1) = Chan2Data(z1)) and
(forall z1:int. Chan3Cmd'(z1) = Chan3Cmd(z1)) and
(forall z1:int. Chan3Data'(z1) = Chan3Data(z1)) and
(forall z1:int. CacheState'(z1) = CacheState(z1)) and
(forall z1:int. CacheData'(z1) = CacheData(z1)) and
(forall z1:int. Invset'(z1) = Invset(z1)) and
(forall z1:int. Shrset'(z1) = Shrset(z1)) ))


or

(* transition recvReqs *)
(exists i:int. 
( (* requires *)
Curcmd = Empty and
Chan1Cmd(i) = Reqs) and
( (* actions *)
Curcmd' = Reqs and
CurClient' = i and
Exgntd' = Exgntd and
MemData' = MemData and
AuxData' = AuxData and
Store_data' = Store_data and
(forall _j3:int.
((_j3 = i) -> Chan1Cmd'(_j3) = Empty) and
(not (_j3 = i) -> Chan1Cmd'(_j3) = Chan1Cmd(_j3))) and
(forall j:int.
Invset'(j) = Shrset(j)) and
(forall z1:int. Chan1Data'(z1) = Chan1Data(z1)) and
(forall z1:int. Chan2Cmd'(z1) = Chan2Cmd(z1)) and
(forall z1:int. Chan2Data'(z1) = Chan2Data(z1)) and
(forall z1:int. Chan3Cmd'(z1) = Chan3Cmd(z1)) and
(forall z1:int. Chan3Data'(z1) = Chan3Data(z1)) and
(forall z1:int. CacheState'(z1) = CacheState(z1)) and
(forall z1:int. CacheData'(z1) = CacheData(z1)) and
(forall z1:int. Shrset'(z1) = Shrset(z1)) ))


or

(* transition recvReqe *)
(exists i:int. 
( (* requires *)
Curcmd = Empty and
Chan1Cmd(i) = Reqe) and
( (* actions *)
Curcmd' = Reqe and
CurClient' = i and
Exgntd' = Exgntd and
MemData' = MemData and
AuxData' = AuxData and
Store_data' = Store_data and
(forall _j4:int.
((_j4 = i) -> Chan1Cmd'(_j4) = Empty) and
(not (_j4 = i) -> Chan1Cmd'(_j4) = Chan1Cmd(_j4))) and
(forall j:int.
Invset'(j) = Shrset(j)) and
(forall z1:int. Chan1Data'(z1) = Chan1Data(z1)) and
(forall z1:int. Chan2Cmd'(z1) = Chan2Cmd(z1)) and
(forall z1:int. Chan2Data'(z1) = Chan2Data(z1)) and
(forall z1:int. Chan3Cmd'(z1) = Chan3Cmd(z1)) and
(forall z1:int. Chan3Data'(z1) = Chan3Data(z1)) and
(forall z1:int. CacheState'(z1) = CacheState(z1)) and
(forall z1:int. CacheData'(z1) = CacheData(z1)) and
(forall z1:int. Shrset'(z1) = Shrset(z1)) ))


or

(* transition sendInv1 *)
(exists i:int. 
( (* requires *)
Curcmd = Reqe and
Chan2Cmd(i) = Empty and
Invset(i) = true) and
( (* actions *)
Exgntd' = Exgntd and
Curcmd' = Curcmd and
CurClient' = CurClient and
MemData' = MemData and
AuxData' = AuxData and
Store_data' = Store_data and
(forall _j5:int.
((_j5 = i) -> Chan2Cmd'(_j5) = Inv) and
(not (_j5 = i) -> Chan2Cmd'(_j5) = Chan2Cmd(_j5))) and
(forall _j6:int.
((_j6 = i) -> Invset'(_j6) = false) and
(not (_j6 = i) -> Invset'(_j6) = Invset(_j6))) and
(forall z1:int. Chan1Cmd'(z1) = Chan1Cmd(z1)) and
(forall z1:int. Chan1Data'(z1) = Chan1Data(z1)) and
(forall z1:int. Chan2Data'(z1) = Chan2Data(z1)) and
(forall z1:int. Chan3Cmd'(z1) = Chan3Cmd(z1)) and
(forall z1:int. Chan3Data'(z1) = Chan3Data(z1)) and
(forall z1:int. CacheState'(z1) = CacheState(z1)) and
(forall z1:int. CacheData'(z1) = CacheData(z1)) and
(forall z1:int. Shrset'(z1) = Shrset(z1)) ))


or

(* transition sendInv2 *)
(exists i:int. 
( (* requires *)
Exgntd = true and
Curcmd = Reqs and
Chan2Cmd(i) = Empty and
Invset(i) = true) and
( (* actions *)
Exgntd' = Exgntd and
Curcmd' = Curcmd and
CurClient' = CurClient and
MemData' = MemData and
AuxData' = AuxData and
Store_data' = Store_data and
(forall _j7:int.
((_j7 = i) -> Chan2Cmd'(_j7) = Inv) and
(not (_j7 = i) -> Chan2Cmd'(_j7) = Chan2Cmd(_j7))) and
(forall _j8:int.
((_j8 = i) -> Invset'(_j8) = false) and
(not (_j8 = i) -> Invset'(_j8) = Invset(_j8))) and
(forall z1:int. Chan1Cmd'(z1) = Chan1Cmd(z1)) and
(forall z1:int. Chan1Data'(z1) = Chan1Data(z1)) and
(forall z1:int. Chan2Data'(z1) = Chan2Data(z1)) and
(forall z1:int. Chan3Cmd'(z1) = Chan3Cmd(z1)) and
(forall z1:int. Chan3Data'(z1) = Chan3Data(z1)) and
(forall z1:int. CacheState'(z1) = CacheState(z1)) and
(forall z1:int. CacheData'(z1) = CacheData(z1)) and
(forall z1:int. Shrset'(z1) = Shrset(z1)) ))


or

(* transition sendInvack *)
(exists i:int. 
( (* requires *)
Chan2Cmd(i) = Inv and
Chan3Cmd(i) = Empty) and
( (* actions *)
Exgntd' = Exgntd and
Curcmd' = Curcmd and
CurClient' = CurClient and
MemData' = MemData and
AuxData' = AuxData and
Store_data' = Store_data and
(forall _j9:int.
((_j9 = i) -> Chan2Cmd'(_j9) = Empty) and
(not (_j9 = i) -> Chan2Cmd'(_j9) = Chan2Cmd(_j9))) and
(forall _j10:int.
((_j10 = i) -> Chan3Cmd'(_j10) = Invack) and
(not (_j10 = i) -> Chan3Cmd'(_j10) = Chan3Cmd(_j10))) and
(forall j:int.
((j = i and
CacheState(i) = Exclusive) -> Chan3Data'(j) = CacheData(i)) and
(not (j = i and
CacheState(i) = Exclusive) -> Chan3Data'(j) = Chan3Data(j))) and
(forall _j11:int.
((_j11 = i) -> CacheState'(_j11) = Invalid) and
(not (_j11 = i) -> CacheState'(_j11) = CacheState(_j11))) and
(forall z1:int. Chan1Cmd'(z1) = Chan1Cmd(z1)) and
(forall z1:int. Chan1Data'(z1) = Chan1Data(z1)) and
(forall z1:int. Chan2Data'(z1) = Chan2Data(z1)) and
(forall z1:int. CacheData'(z1) = CacheData(z1)) and
(forall z1:int. Invset'(z1) = Invset(z1)) and
(forall z1:int. Shrset'(z1) = Shrset(z1)) ))


or

(* transition recvInvack1 *)
(exists i:int. 
( (* requires *)
Exgntd = false and
Curcmd <> Empty and
Chan3Cmd(i) = Invack) and
( (* actions *)
Exgntd' = Exgntd and
Curcmd' = Curcmd and
CurClient' = CurClient and
MemData' = MemData and
AuxData' = AuxData and
Store_data' = Store_data and
(forall _j12:int.
((_j12 = i) -> Chan3Cmd'(_j12) = Empty) and
(not (_j12 = i) -> Chan3Cmd'(_j12) = Chan3Cmd(_j12))) and
(forall _j13:int.
((_j13 = i) -> Shrset'(_j13) = false) and
(not (_j13 = i) -> Shrset'(_j13) = Shrset(_j13))) and
(forall z1:int. Chan1Cmd'(z1) = Chan1Cmd(z1)) and
(forall z1:int. Chan1Data'(z1) = Chan1Data(z1)) and
(forall z1:int. Chan2Cmd'(z1) = Chan2Cmd(z1)) and
(forall z1:int. Chan2Data'(z1) = Chan2Data(z1)) and
(forall z1:int. Chan3Data'(z1) = Chan3Data(z1)) and
(forall z1:int. CacheState'(z1) = CacheState(z1)) and
(forall z1:int. CacheData'(z1) = CacheData(z1)) and
(forall z1:int. Invset'(z1) = Invset(z1)) ))


or

(* transition recvInvack2 *)
(exists i:int. 
( (* requires *)
Exgntd = true and
Curcmd <> Empty and
Chan3Cmd(i) = Invack) and
( (* actions *)
Exgntd' = false and
MemData' = Chan3Data(i) and
Curcmd' = Curcmd and
CurClient' = CurClient and
AuxData' = AuxData and
Store_data' = Store_data and
(forall _j14:int.
((_j14 = i) -> Chan3Cmd'(_j14) = Empty) and
(not (_j14 = i) -> Chan3Cmd'(_j14) = Chan3Cmd(_j14))) and
(forall _j15:int.
((_j15 = i) -> Shrset'(_j15) = false) and
(not (_j15 = i) -> Shrset'(_j15) = Shrset(_j15))) and
(forall z1:int. Chan1Cmd'(z1) = Chan1Cmd(z1)) and
(forall z1:int. Chan1Data'(z1) = Chan1Data(z1)) and
(forall z1:int. Chan2Cmd'(z1) = Chan2Cmd(z1)) and
(forall z1:int. Chan2Data'(z1) = Chan2Data(z1)) and
(forall z1:int. Chan3Data'(z1) = Chan3Data(z1)) and
(forall z1:int. CacheState'(z1) = CacheState(z1)) and
(forall z1:int. CacheData'(z1) = CacheData(z1)) and
(forall z1:int. Invset'(z1) = Invset(z1)) ))


or

(* transition sendGnts *)
(exists i:int. 
( (* requires *)
Exgntd = false and
Curcmd = Reqs and
CurClient = i and
Chan2Cmd(i) = Empty) and
( (* actions *)
Curcmd' = Empty and
Exgntd' = Exgntd and
CurClient' = CurClient and
MemData' = MemData and
AuxData' = AuxData and
Store_data' = Store_data and
(forall _j16:int.
((_j16 = i) -> Chan2Cmd'(_j16) = Gnts) and
(not (_j16 = i) -> Chan2Cmd'(_j16) = Chan2Cmd(_j16))) and
(forall _j17:int.
((_j17 = i) -> Chan2Data'(_j17) = MemData) and
(not (_j17 = i) -> Chan2Data'(_j17) = Chan2Data(_j17))) and
(forall _j18:int.
((_j18 = i) -> Shrset'(_j18) = true) and
(not (_j18 = i) -> Shrset'(_j18) = Shrset(_j18))) and
(forall z1:int. Chan1Cmd'(z1) = Chan1Cmd(z1)) and
(forall z1:int. Chan1Data'(z1) = Chan1Data(z1)) and
(forall z1:int. Chan3Cmd'(z1) = Chan3Cmd(z1)) and
(forall z1:int. Chan3Data'(z1) = Chan3Data(z1)) and
(forall z1:int. CacheState'(z1) = CacheState(z1)) and
(forall z1:int. CacheData'(z1) = CacheData(z1)) and
(forall z1:int. Invset'(z1) = Invset(z1)) ))


or

(* transition sendGnte *)
(exists i:int. 
( (* requires *)
Exgntd = false and
Curcmd = Reqe and
CurClient = i and
Chan2Cmd(i) = Empty and
Shrset(i) = false
and (forall j:int.i = j or 
(Shrset(j) = false))
) and
( (* actions *)
Curcmd' = Empty and
Exgntd' = true and
CurClient' = CurClient and
MemData' = MemData and
AuxData' = AuxData and
Store_data' = Store_data and
(forall _j19:int.
((_j19 = i) -> Chan2Cmd'(_j19) = Gnte) and
(not (_j19 = i) -> Chan2Cmd'(_j19) = Chan2Cmd(_j19))) and
(forall _j20:int.
((_j20 = i) -> Chan2Data'(_j20) = MemData) and
(not (_j20 = i) -> Chan2Data'(_j20) = Chan2Data(_j20))) and
(forall _j21:int.
((_j21 = i) -> Shrset'(_j21) = true) and
(not (_j21 = i) -> Shrset'(_j21) = Shrset(_j21))) and
(forall z1:int. Chan1Cmd'(z1) = Chan1Cmd(z1)) and
(forall z1:int. Chan1Data'(z1) = Chan1Data(z1)) and
(forall z1:int. Chan3Cmd'(z1) = Chan3Cmd(z1)) and
(forall z1:int. Chan3Data'(z1) = Chan3Data(z1)) and
(forall z1:int. CacheState'(z1) = CacheState(z1)) and
(forall z1:int. CacheData'(z1) = CacheData(z1)) and
(forall z1:int. Invset'(z1) = Invset(z1)) ))


or

(* transition recvGnts *)
(exists i:int. 
( (* requires *)
Chan2Cmd(i) = Gnts) and
( (* actions *)
Exgntd' = Exgntd and
Curcmd' = Curcmd and
CurClient' = CurClient and
MemData' = MemData and
AuxData' = AuxData and
Store_data' = Store_data and
(forall _j22:int.
((_j22 = i) -> CacheState'(_j22) = Shared) and
(not (_j22 = i) -> CacheState'(_j22) = CacheState(_j22))) and
(forall _j23:int.
((_j23 = i) -> CacheData'(_j23) = Chan2Data(i)) and
(not (_j23 = i) -> CacheData'(_j23) = CacheData(_j23))) and
(forall _j24:int.
((_j24 = i) -> Chan2Cmd'(_j24) = Empty) and
(not (_j24 = i) -> Chan2Cmd'(_j24) = Chan2Cmd(_j24))) and
(forall z1:int. Chan1Cmd'(z1) = Chan1Cmd(z1)) and
(forall z1:int. Chan1Data'(z1) = Chan1Data(z1)) and
(forall z1:int. Chan2Data'(z1) = Chan2Data(z1)) and
(forall z1:int. Chan3Cmd'(z1) = Chan3Cmd(z1)) and
(forall z1:int. Chan3Data'(z1) = Chan3Data(z1)) and
(forall z1:int. Invset'(z1) = Invset(z1)) and
(forall z1:int. Shrset'(z1) = Shrset(z1)) ))


or

(* transition recvGnte *)
(exists i:int. 
( (* requires *)
Chan2Cmd(i) = Gnte) and
( (* actions *)
Exgntd' = Exgntd and
Curcmd' = Curcmd and
CurClient' = CurClient and
MemData' = MemData and
AuxData' = AuxData and
Store_data' = Store_data and
(forall _j25:int.
((_j25 = i) -> CacheState'(_j25) = Exclusive) and
(not (_j25 = i) -> CacheState'(_j25) = CacheState(_j25))) and
(forall _j26:int.
((_j26 = i) -> CacheData'(_j26) = Chan2Data(i)) and
(not (_j26 = i) -> CacheData'(_j26) = CacheData(_j26))) and
(forall _j27:int.
((_j27 = i) -> Chan2Cmd'(_j27) = Empty) and
(not (_j27 = i) -> Chan2Cmd'(_j27) = Chan2Cmd(_j27))) and
(forall z1:int. Chan1Cmd'(z1) = Chan1Cmd(z1)) and
(forall z1:int. Chan1Data'(z1) = Chan1Data(z1)) and
(forall z1:int. Chan2Data'(z1) = Chan2Data(z1)) and
(forall z1:int. Chan3Cmd'(z1) = Chan3Cmd(z1)) and
(forall z1:int. Chan3Data'(z1) = Chan3Data(z1)) and
(forall z1:int. Invset'(z1) = Invset(z1)) and
(forall z1:int. Shrset'(z1) = Shrset(z1)) ))
)


(* invariant after *)
goal invariant_preserved_1:
not (exists z1:int. Invset'(z1) = true and
Shrset'(z1) = false)

goal invariant_preserved_2:
not (exists z1:int. CacheState'(z1) <> Invalid and
Shrset'(z1) = false)

goal invariant_preserved_3:
not (exists z1:int. CacheState'(z1) <> Invalid and
CacheData'(z1) <> AuxData')

goal invariant_preserved_4:
not (exists z1,z2:int. z1 <> z2 and CacheState'(z1) = Exclusive and
Shrset'(z2) = true)

goal invariant_preserved_5:
not (exists z1,z2:int. z1 <> z2 and CacheState'(z1) = Exclusive and
Invset'(z2) = true)

goal invariant_preserved_6:
not (exists z1,z2:int. z1 <> z2 and CacheState'(z1) = Exclusive and
CacheState'(z2) <> Invalid)

goal invariant_preserved_7:
not (exists z1,z2:int. z1 <> z2 and Chan3Cmd'(z2) = Invack and
CacheState'(z1) = Exclusive)

goal invariant_preserved_8:
not (exists z1:int. Chan3Cmd'(z1) = Invack and
Shrset'(z1) = false)

goal invariant_preserved_9:
not (exists z1:int. Chan3Cmd'(z1) = Invack and
Invset'(z1) = true)

goal invariant_preserved_10:
not (exists z1:int. Chan3Cmd'(z1) = Invack and
CacheState'(z1) <> Invalid)

goal invariant_preserved_11:
not (exists z1:int. Chan3Cmd'(z1) = Invack and
CacheState'(z1) = Exclusive)

goal invariant_preserved_12:
not (exists z1,z2:int. z1 <> z2 and Chan2Cmd'(z2) = Gnts and
CacheState'(z1) = Exclusive)

goal invariant_preserved_13:
not (exists z1,z2:int. z1 <> z2 and Chan2Cmd'(z2) = Inv and
CacheState'(z1) = Exclusive)

goal invariant_preserved_14:
not (exists z1,z2:int. z1 <> z2 and Chan2Cmd'(z1) = Gnte and
Shrset'(z2) = true)

goal invariant_preserved_15:
not (exists z1:int. Chan2Cmd'(z1) = Gnte and
Shrset'(z1) = false)

goal invariant_preserved_16:
not (exists z1,z2:int. z1 <> z2 and Chan2Cmd'(z1) = Gnte and
Invset'(z2) = true)

goal invariant_preserved_17:
not (exists z1,z2:int. z1 <> z2 and Chan2Cmd'(z1) = Gnte and
CacheState'(z2) <> Invalid)

goal invariant_preserved_18:
not (exists z1:int. Chan2Cmd'(z1) = Gnte and
CacheState'(z1) = Exclusive)

goal invariant_preserved_19:
not (exists z1,z2:int. z1 <> z2 and Chan2Cmd'(z1) = Gnte and
Chan3Cmd'(z2) = Invack)

goal invariant_preserved_20:
not (exists z1:int. Chan2Cmd'(z1) = Gnte and
Chan3Cmd'(z1) = Invack)

goal invariant_preserved_21:
not (exists z1:int. Chan2Cmd'(z1) = Gnte and
Chan2Data'(z1) <> AuxData')

goal invariant_preserved_22:
not (exists z1,z2:int. z1 <> z2 and Chan2Cmd'(z1) = Gnte and
Chan2Cmd'(z2) = Gnte)

goal invariant_preserved_23:
not (exists z1,z2:int. z1 <> z2 and Chan2Cmd'(z1) = Gnte and
Chan2Cmd'(z2) = Gnts)

goal invariant_preserved_24:
not (exists z1,z2:int. z1 <> z2 and Chan2Cmd'(z1) = Gnte and
Chan2Cmd'(z2) = Inv)

goal invariant_preserved_25:
not (exists z1:int. Chan2Cmd'(z1) = Gnts and
Shrset'(z1) = false)

goal invariant_preserved_26:
not (exists z1:int. Chan2Cmd'(z1) = Gnts and
CacheState'(z1) = Exclusive)

goal invariant_preserved_27:
not (exists z1:int. Chan2Cmd'(z1) = Gnts and
Chan3Cmd'(z1) = Invack)

goal invariant_preserved_28:
not (exists z1:int. Chan2Cmd'(z1) = Gnts and
Chan2Data'(z1) <> AuxData')

goal invariant_preserved_29:
not (exists z1:int. Chan2Cmd'(z1) = Inv and
Shrset'(z1) = false)

goal invariant_preserved_30:
not (exists z1:int. Chan2Cmd'(z1) = Inv and
Invset'(z1) = true)

goal invariant_preserved_31:
not (exists z1:int. Chan2Cmd'(z1) = Inv and
Chan3Cmd'(z1) = Invack)

goal invariant_preserved_32:
not (exists z1:int. Curcmd' = Empty and
Chan3Cmd'(z1) = Invack)

goal invariant_preserved_33:
not (exists z1:int. Curcmd' = Empty and
Chan2Cmd'(z1) = Inv)

goal invariant_preserved_34:
not (exists z1:int. Exgntd' = false and
CacheState'(z1) = Exclusive)

goal invariant_preserved_35:
not (exists z1:int. Exgntd' = false and
Chan2Cmd'(z1) = Gnte)

goal invariant_preserved_36:
not (Exgntd' = false and
MemData' <> AuxData')

goal invariant_preserved_37:
not (exists z1:int. Exgntd' = false and
Curcmd' = Reqs and
Chan3Cmd'(z1) = Invack)

goal invariant_preserved_38:
not (exists z1:int. Exgntd' = false and
Curcmd' = Reqs and
Chan2Cmd'(z1) = Inv)

goal invariant_preserved_39:
not (exists z1:int. Exgntd' = true and
Chan2Cmd'(z1) = Gnts)

goal invariant_preserved_40:
not (exists z1:int. Exgntd' = true and
Curcmd' <> Empty and
Chan3Cmd'(z1) = Invack and
Chan3Data'(z1) <> AuxData')

goal invariant_preserved_41:
not (exists z1:int. Exgntd' = true and
Curcmd' <> Empty and
Chan2Cmd'(z1) = Inv and
Chan3Cmd'(z1) = Empty and
Chan3Data'(z1) <> AuxData' and
CacheData'(z1) <> AuxData')

goal invariant_preserved_42:
not (exists z1:int. Exgntd' = true and
Curcmd' <> Empty and
Chan2Cmd'(z1) = Inv and
Chan3Cmd'(z1) = Empty and
Chan3Data'(z1) <> AuxData' and
CacheState'(z1) <> Exclusive)

goal invariant_preserved_43:
not (exists z1:int. Exgntd' = true and
Curcmd' = Reqe and
Chan2Cmd'(z1) = Empty and
Chan3Cmd'(z1) = Empty and
Chan3Data'(z1) <> AuxData' and
CacheData'(z1) <> AuxData' and
Invset'(z1) = true)

goal invariant_preserved_44:
not (exists z1:int. Exgntd' = true and
Curcmd' = Reqe and
Chan2Cmd'(z1) = Empty and
Chan3Cmd'(z1) = Empty and
Chan3Data'(z1) <> AuxData' and
CacheState'(z1) <> Exclusive and
Invset'(z1) = true)

goal invariant_preserved_45:
not (exists z1,z2:int. z1 <> z2 and Exgntd' = true and
Curcmd' = Reqs and
Chan3Cmd'(z1) = Invack and
Chan3Cmd'(z2) = Invack)

goal invariant_preserved_46:
not (exists z1,z2:int. z1 <> z2 and Exgntd' = true and
Curcmd' = Reqs and
Chan2Cmd'(z1) = Inv and
Chan3Cmd'(z2) = Invack)

goal invariant_preserved_47:
not (exists z1,z2:int. z1 <> z2 and Exgntd' = true and
Curcmd' = Reqs and
Chan2Cmd'(z1) = Inv and
Chan2Cmd'(z2) = Inv and
Chan3Cmd'(z2) = Empty)

goal invariant_preserved_48:
not (exists z1,z2:int. z1 <> z2 and Exgntd' = true and
Curcmd' = Reqs and
Chan2Cmd'(z1) = Inv and
Chan2Cmd'(z2) = Empty and
Chan3Cmd'(z2) = Empty and
Invset'(z2) = true)

goal invariant_preserved_49:
not (exists z1,z2:int. z1 <> z2 and Exgntd' = true and
Curcmd' = Reqs and
Chan2Cmd'(z1) = Empty and
Chan3Cmd'(z2) = Invack and
Invset'(z1) = true)

goal invariant_preserved_50:
not (exists z1:int. Exgntd' = true and
Curcmd' = Reqs and
Chan2Cmd'(z1) = Empty and
Chan3Cmd'(z1) = Empty and
Chan3Data'(z1) <> AuxData' and
CacheData'(z1) <> AuxData' and
Invset'(z1) = true)

goal invariant_preserved_51:
not (exists z1:int. Exgntd' = true and
Curcmd' = Reqs and
Chan2Cmd'(z1) = Empty and
Chan3Cmd'(z1) = Empty and
Chan3Data'(z1) <> AuxData' and
CacheState'(z1) <> Exclusive and
Invset'(z1) = true)

goal invariant_preserved_52:
not (exists z1,z2:int. z1 <> z2 and Exgntd' = true and
Curcmd' = Reqs and
Chan2Cmd'(z1) = Empty and
Chan2Cmd'(z2) = Inv and
Chan3Cmd'(z2) = Empty and
Invset'(z1) = true)

goal invariant_preserved_53:
not (exists z1,z2:int. z1 <> z2 and Exgntd' = true and
Curcmd' = Reqs and
Chan2Cmd'(z1) = Empty and
Chan2Cmd'(z2) = Empty and
Chan3Cmd'(z2) = Empty and
Invset'(z1) = true and
Invset'(z2) = true)

goal invariant_preserved_54:
not (exists z1,z2,z3:int. z2 <> z3 and z1 <> z3 and z1 <> z2 and Exgntd' = true and
Curcmd' = Empty and
Chan1Cmd'(z3) = Reqs and
Chan2Cmd'(z1) = Empty and
Chan2Cmd'(z2) = Empty and
Chan3Cmd'(z2) = Empty and
Shrset'(z1) = true and
Shrset'(z2) = true)

goal invariant_preserved_55:
not (exists z1,z2,z3:int. z2 <> z3 and z1 <> z3 and z1 <> z2 and Exgntd' = true and
Curcmd' = Empty and
Chan1Cmd'(z3) = Empty and
Chan2Cmd'(z1) = Empty and
Chan2Cmd'(z2) = Empty and
Chan3Cmd'(z2) = Empty and
CacheState'(z3) = Invalid and
Shrset'(z1) = true and
Shrset'(z2) = true)

goal invariant_preserved_56:
not (exists z1,z2:int. z1 <> z2 and Exgntd' = true and
Curcmd' = Empty and
Chan1Cmd'(z2) = Reqe and
Chan2Cmd'(z1) = Empty and
Chan3Cmd'(z1) = Empty and
Chan3Data'(z1) <> AuxData' and
CacheState'(z1) <> Exclusive and
Shrset'(z1) = true)

goal invariant_preserved_57:
not (exists z1,z2:int. z1 <> z2 and Exgntd' = true and
Curcmd' = Empty and
Chan1Cmd'(z2) = Reqs and
Chan2Cmd'(z1) = Empty and
Chan3Cmd'(z1) = Empty and
Chan3Data'(z1) <> AuxData' and
CacheState'(z1) <> Exclusive and
Shrset'(z1) = true)

goal invariant_preserved_58:
not (exists z1,z2:int. z1 <> z2 and Exgntd' = true and
Curcmd' = Empty and
Chan1Cmd'(z2) = Reqs and
Chan2Cmd'(z1) = Empty and
Chan2Cmd'(z2) = Empty and
Chan3Cmd'(z2) = Empty and
Shrset'(z1) = true and
Shrset'(z2) = true)

goal invariant_preserved_59:
not (exists z1,z2:int. z1 <> z2 and Exgntd' = true and
Curcmd' = Empty and
Chan1Cmd'(z2) = Empty and
Chan2Cmd'(z1) = Empty and
Chan3Cmd'(z1) = Empty and
Chan3Data'(z1) <> AuxData' and
CacheState'(z1) <> Exclusive and
CacheState'(z2) <> Exclusive and
Shrset'(z1) = true)

goal invariant_preserved_60:
not (exists z1,z2:int. z1 <> z2 and Exgntd' = true and
Curcmd' = Empty and
Chan1Cmd'(z2) = Empty and
Chan2Cmd'(z1) = Empty and
Chan3Cmd'(z1) = Empty and
Chan3Data'(z1) <> AuxData' and
CacheState'(z1) <> Exclusive and
CacheState'(z2) = Invalid and
Shrset'(z1) = true)

goal invariant_preserved_61:
not (exists z1,z2:int. z1 <> z2 and Exgntd' = true and
Curcmd' = Empty and
Chan1Cmd'(z2) = Empty and
Chan2Cmd'(z1) = Empty and
Chan2Cmd'(z2) = Empty and
Chan3Cmd'(z2) = Empty and
CacheState'(z2) = Invalid and
Shrset'(z1) = true and
Shrset'(z2) = true)

goal invariant_preserved_62:
not (exists z1:int. Exgntd' = true and
Curcmd' = Empty and
Chan1Cmd'(z1) = Reqe and
Chan2Cmd'(z1) = Empty and
Chan3Cmd'(z1) = Empty and
Chan3Data'(z1) <> AuxData' and
CacheData'(z1) <> AuxData' and
Shrset'(z1) = true)

goal invariant_preserved_63:
not (exists z1:int. Exgntd' = true and
Curcmd' = Empty and
Chan1Cmd'(z1) = Reqe and
Chan2Cmd'(z1) = Empty and
Chan3Cmd'(z1) = Empty and
Chan3Data'(z1) <> AuxData' and
CacheState'(z1) <> Exclusive and
Shrset'(z1) = true)

goal invariant_preserved_64:
not (exists z1:int. Exgntd' = true and
Curcmd' = Empty and
Chan1Cmd'(z1) = Reqs and
Chan2Cmd'(z1) = Empty and
Chan3Cmd'(z1) = Empty and
Chan3Data'(z1) <> AuxData' and
CacheData'(z1) <> AuxData' and
Shrset'(z1) = true)

goal invariant_preserved_65:
not (exists z1:int. Exgntd' = true and
Curcmd' = Empty and
Chan1Cmd'(z1) = Reqs and
Chan2Cmd'(z1) = Empty and
Chan3Cmd'(z1) = Empty and
Chan3Data'(z1) <> AuxData' and
CacheState'(z1) <> Exclusive and
Shrset'(z1) = true)

goal invariant_preserved_66:
not (exists z1,z2:int. z1 <> z2 and Exgntd' = true and
Curcmd' = Empty and
Chan1Cmd'(z1) = Reqs and
Chan2Cmd'(z1) = Empty and
Chan2Cmd'(z2) = Empty and
Chan3Cmd'(z2) = Empty and
Shrset'(z1) = true and
Shrset'(z2) = true)

goal invariant_preserved_67:
not (exists z1:int. Exgntd' = true and
Curcmd' = Empty and
Chan1Cmd'(z1) = Empty and
Chan2Cmd'(z1) = Empty and
Chan3Cmd'(z1) = Empty and
Chan3Data'(z1) <> AuxData' and
CacheState'(z1) <> Exclusive and
Shrset'(z1) = true)

goal invariant_preserved_68:
not (exists z1,z2:int. z1 <> z2 and Exgntd' = true and
Curcmd' = Empty and
Chan1Cmd'(z1) = Empty and
Chan2Cmd'(z1) = Empty and
Chan2Cmd'(z2) = Empty and
Chan3Cmd'(z2) = Empty and
CacheState'(z1) = Invalid and
Shrset'(z1) = true and
Shrset'(z2) = true)
