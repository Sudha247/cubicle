type location = L0 | L1 | L2 | L3 | L4 | L5 | L6 | L7

logic A : int -> location
logic B : int -> bool
logic S : int -> bool
logic W : int -> bool
logic A' : int -> location
logic B' : int -> bool
logic S' : int -> bool
logic W' : int -> bool

goal initialisation:
(* init *)
(forall x:int. (A(x) = L0 and
B(x) = false and
S(x) = false and
W(x) = false))

->

(* invariant *)
(not (exists z1:int. A(z1) = L7 and
W(z1) = true) and
not (exists z1:int. A(z1) = L7 and
S(z1) = false) and
not (exists z1:int. A(z1) = L7 and
B(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and A(z1) = L7 and
A(z2) = L7) and
not (exists z1:int. A(z1) = L6 and
W(z1) = true) and
not (exists z1:int. A(z1) = L6 and
S(z1) = false) and
not (exists z1:int. A(z1) = L6 and
B(z1) = true) and
not (exists z1:int. A(z1) = L5 and
W(z1) = true) and
not (exists z1:int. A(z1) = L5 and
S(z1) = false) and
not (exists z1:int. A(z1) = L5 and
B(z1) = true) and
not (exists z1:int. A(z1) = L4 and
W(z1) = false) and
not (exists z1:int. A(z1) = L4 and
B(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and A(z1) = L4 and
A(z2) = L7) and
not (exists z1,z2:int. z1 <> z2 and A(z1) = L4 and
A(z2) = L6) and
not (exists z1:int. A(z1) = L3 and
W(z1) = false) and
not (exists z1:int. A(z1) = L3 and
S(z1) = false) and
not (exists z1:int. A(z1) = L3 and
B(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and A(z1) = L3 and
A(z2) = L7) and
not (exists z1,z2:int. z1 <> z2 and A(z1) = L3 and
A(z2) = L6) and
not (exists z1:int. A(z1) = L2 and
W(z1) = true) and
not (exists z1:int. A(z1) = L2 and
S(z1) = true) and
not (exists z1:int. A(z1) = L2 and
B(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and A(z1) = L2 and
A(z2) = L7) and
not (exists z1,z2:int. z1 <> z2 and A(z1) = L2 and
A(z2) = L6) and
not (exists z1,z2:int. z1 <> z2 and A(z1) = L2 and
A(z2) = L5) and
not (exists z1:int. A(z1) = L1 and
W(z1) = true) and
not (exists z1:int. A(z1) = L1 and
S(z1) = true) and
not (exists z1:int. A(z1) = L0 and
W(z1) = true) and
not (exists z1:int. A(z1) = L0 and
S(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and z1 <= z2 and
A(z1) = L6 and
A(z2) = L7) and
not (exists z1,z2:int. z1 <> z2 and z1 <= z2 and
A(z1) = L5 and
A(z2) = L7 and
W(z2) = false))


goal property:
(* invariant *)
(not (exists z1:int. A(z1) = L7 and
W(z1) = true) and
not (exists z1:int. A(z1) = L7 and
S(z1) = false) and
not (exists z1:int. A(z1) = L7 and
B(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and A(z1) = L7 and
A(z2) = L7) and
not (exists z1:int. A(z1) = L6 and
W(z1) = true) and
not (exists z1:int. A(z1) = L6 and
S(z1) = false) and
not (exists z1:int. A(z1) = L6 and
B(z1) = true) and
not (exists z1:int. A(z1) = L5 and
W(z1) = true) and
not (exists z1:int. A(z1) = L5 and
S(z1) = false) and
not (exists z1:int. A(z1) = L5 and
B(z1) = true) and
not (exists z1:int. A(z1) = L4 and
W(z1) = false) and
not (exists z1:int. A(z1) = L4 and
B(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and A(z1) = L4 and
A(z2) = L7) and
not (exists z1,z2:int. z1 <> z2 and A(z1) = L4 and
A(z2) = L6) and
not (exists z1:int. A(z1) = L3 and
W(z1) = false) and
not (exists z1:int. A(z1) = L3 and
S(z1) = false) and
not (exists z1:int. A(z1) = L3 and
B(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and A(z1) = L3 and
A(z2) = L7) and
not (exists z1,z2:int. z1 <> z2 and A(z1) = L3 and
A(z2) = L6) and
not (exists z1:int. A(z1) = L2 and
W(z1) = true) and
not (exists z1:int. A(z1) = L2 and
S(z1) = true) and
not (exists z1:int. A(z1) = L2 and
B(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and A(z1) = L2 and
A(z2) = L7) and
not (exists z1,z2:int. z1 <> z2 and A(z1) = L2 and
A(z2) = L6) and
not (exists z1,z2:int. z1 <> z2 and A(z1) = L2 and
A(z2) = L5) and
not (exists z1:int. A(z1) = L1 and
W(z1) = true) and
not (exists z1:int. A(z1) = L1 and
S(z1) = true) and
not (exists z1:int. A(z1) = L0 and
W(z1) = true) and
not (exists z1:int. A(z1) = L0 and
S(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and z1 <= z2 and
A(z1) = L6 and
A(z2) = L7) and
not (exists z1,z2:int. z1 <> z2 and z1 <= z2 and
A(z1) = L5 and
A(z2) = L7 and
W(z2) = false))

->

(* property *)
(not (exists z1,z2:int. z1 <> z2 and A(z1) = L7 and
A(z2) = L7))


axiom induction_hypothesis:
(* invariant before *)
(not (exists z1:int. A(z1) = L7 and
W(z1) = true) and
not (exists z1:int. A(z1) = L7 and
S(z1) = false) and
not (exists z1:int. A(z1) = L7 and
B(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and A(z1) = L7 and
A(z2) = L7) and
not (exists z1:int. A(z1) = L6 and
W(z1) = true) and
not (exists z1:int. A(z1) = L6 and
S(z1) = false) and
not (exists z1:int. A(z1) = L6 and
B(z1) = true) and
not (exists z1:int. A(z1) = L5 and
W(z1) = true) and
not (exists z1:int. A(z1) = L5 and
S(z1) = false) and
not (exists z1:int. A(z1) = L5 and
B(z1) = true) and
not (exists z1:int. A(z1) = L4 and
W(z1) = false) and
not (exists z1:int. A(z1) = L4 and
B(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and A(z1) = L4 and
A(z2) = L7) and
not (exists z1,z2:int. z1 <> z2 and A(z1) = L4 and
A(z2) = L6) and
not (exists z1:int. A(z1) = L3 and
W(z1) = false) and
not (exists z1:int. A(z1) = L3 and
S(z1) = false) and
not (exists z1:int. A(z1) = L3 and
B(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and A(z1) = L3 and
A(z2) = L7) and
not (exists z1,z2:int. z1 <> z2 and A(z1) = L3 and
A(z2) = L6) and
not (exists z1:int. A(z1) = L2 and
W(z1) = true) and
not (exists z1:int. A(z1) = L2 and
S(z1) = true) and
not (exists z1:int. A(z1) = L2 and
B(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and A(z1) = L2 and
A(z2) = L7) and
not (exists z1,z2:int. z1 <> z2 and A(z1) = L2 and
A(z2) = L6) and
not (exists z1,z2:int. z1 <> z2 and A(z1) = L2 and
A(z2) = L5) and
not (exists z1:int. A(z1) = L1 and
W(z1) = true) and
not (exists z1:int. A(z1) = L1 and
S(z1) = true) and
not (exists z1:int. A(z1) = L0 and
W(z1) = true) and
not (exists z1:int. A(z1) = L0 and
S(z1) = true) and
not (exists z1,z2:int. z1 <> z2 and z1 <= z2 and
A(z1) = L6 and
A(z2) = L7) and
not (exists z1,z2:int. z1 <> z2 and z1 <= z2 and
A(z1) = L5 and
A(z2) = L7 and
W(z2) = false))


axiom transition_realtion:
( (* Transition Relation *)
(* transition t0 *)
(exists x:int. 
( (* requires *)
A(x) = L0) and
( (* actions *)
(forall _j1:int.
((_j1 = x) -> A'(_j1) = L1) and
(not (_j1 = x) -> A'(_j1) = A(_j1))) and
(forall _j2:int.
((_j2 = x) -> B'(_j2) = true) and
(not (_j2 = x) -> B'(_j2) = B(_j2))) and
(forall z1:int. S'(z1) = S(z1)) and
(forall z1:int. W'(z1) = W(z1)) ))


or

(* transition t1 *)
(exists x:int. 
( (* requires *)
A(x) = L1
and (forall y:int.x = y or 
(S(y) = false))
) and
( (* actions *)
(forall _j3:int.
((_j3 = x) -> A'(_j3) = L2) and
(not (_j3 = x) -> A'(_j3) = A(_j3))) and
(forall _j4:int.
((_j4 = x) -> B'(_j4) = false) and
(not (_j4 = x) -> B'(_j4) = B(_j4))) and
(forall z1:int. S'(z1) = S(z1)) and
(forall z1:int. W'(z1) = W(z1)) ))


or

(* transition t2 *)
(exists x:int. 
( (* requires *)
A(x) = L2) and
( (* actions *)
(forall _j5:int.
((_j5 = x) -> A'(_j5) = L3) and
(not (_j5 = x) -> A'(_j5) = A(_j5))) and
(forall _j6:int.
((_j6 = x) -> S'(_j6) = true) and
(not (_j6 = x) -> S'(_j6) = S(_j6))) and
(forall _j7:int.
((_j7 = x) -> W'(_j7) = true) and
(not (_j7 = x) -> W'(_j7) = W(_j7))) and
(forall z1:int. B'(z1) = B(z1)) ))


or

(* transition t3_then *)
(exists x,y:int. x <> y and 
( (* requires *)
A(x) = L3 and
B(y) = false and
W(y) = false) and
( (* actions *)
(forall _j8:int.
((_j8 = x) -> A'(_j8) = L4) and
(not (_j8 = x) -> A'(_j8) = A(_j8))) and
(forall _j9:int.
((_j9 = x) -> S'(_j9) = false) and
(not (_j9 = x) -> S'(_j9) = S(_j9))) and
(forall z1:int. B'(z1) = B(z1)) and
(forall z1:int. W'(z1) = W(z1)) ))


or

(* transition t3_else *)
(exists x:int. 
( (* requires *)
A(x) = L3
and (forall y:int.x = y or 
(B(y) = true) or
(W(y) = true))
) and
( (* actions *)
(forall _j10:int.
((_j10 = x) -> A'(_j10) = L5) and
(not (_j10 = x) -> A'(_j10) = A(_j10))) and
(forall _j11:int.
((_j11 = x) -> W'(_j11) = false) and
(not (_j11 = x) -> W'(_j11) = W(_j11))) and
(forall z1:int. B'(z1) = B(z1)) and
(forall z1:int. S'(z1) = S(z1)) ))


or

(* transition t4 *)
(exists x,y:int. x <> y and 
( (* requires *)
A(x) = L4 and
S(y) = true and
W(y) = false) and
( (* actions *)
(forall _j12:int.
((_j12 = x) -> A'(_j12) = L5) and
(not (_j12 = x) -> A'(_j12) = A(_j12))) and
(forall _j13:int.
((_j13 = x) -> S'(_j13) = true) and
(not (_j13 = x) -> S'(_j13) = S(_j13))) and
(forall _j14:int.
((_j14 = x) -> W'(_j14) = false) and
(not (_j14 = x) -> W'(_j14) = W(_j14))) and
(forall z1:int. B'(z1) = B(z1)) ))


or

(* transition t5 *)
(exists x:int. 
( (* requires *)
A(x) = L5
and (forall y:int.x = y or 
(W(y) = false))
) and
( (* actions *)
(forall _j15:int.
((_j15 = x) -> A'(_j15) = L6) and
(not (_j15 = x) -> A'(_j15) = A(_j15))) and
(forall z1:int. B'(z1) = B(z1)) and
(forall z1:int. S'(z1) = S(z1)) and
(forall z1:int. W'(z1) = W(z1)) ))


or

(* transition t6 *)
(exists x:int. 
( (* requires *)
A(x) = L6
and (forall j:int.x = j or 
(x <= j) or
(S(j) = false))
) and
( (* actions *)
(forall _j16:int.
((_j16 = x) -> A'(_j16) = L7) and
(not (_j16 = x) -> A'(_j16) = A(_j16))) and
(forall z1:int. B'(z1) = B(z1)) and
(forall z1:int. S'(z1) = S(z1)) and
(forall z1:int. W'(z1) = W(z1)) ))


or

(* transition t7 *)
(exists x:int. 
( (* requires *)
A(x) = L7) and
( (* actions *)
(forall _j17:int.
((_j17 = x) -> A'(_j17) = L0) and
(not (_j17 = x) -> A'(_j17) = A(_j17))) and
(forall _j18:int.
((_j18 = x) -> S'(_j18) = false) and
(not (_j18 = x) -> S'(_j18) = S(_j18))) and
(forall z1:int. B'(z1) = B(z1)) and
(forall z1:int. W'(z1) = W(z1)) ))
)


(* invariant after *)
goal invariant_preserved_1:
not (exists z1:int. A'(z1) = L7 and
W'(z1) = true)

goal invariant_preserved_2:
not (exists z1:int. A'(z1) = L7 and
S'(z1) = false)

goal invariant_preserved_3:
not (exists z1:int. A'(z1) = L7 and
B'(z1) = true)

goal invariant_preserved_4:
not (exists z1,z2:int. z1 <> z2 and A'(z1) = L7 and
A'(z2) = L7)

goal invariant_preserved_5:
not (exists z1:int. A'(z1) = L6 and
W'(z1) = true)

goal invariant_preserved_6:
not (exists z1:int. A'(z1) = L6 and
S'(z1) = false)

goal invariant_preserved_7:
not (exists z1:int. A'(z1) = L6 and
B'(z1) = true)

goal invariant_preserved_8:
not (exists z1:int. A'(z1) = L5 and
W'(z1) = true)

goal invariant_preserved_9:
not (exists z1:int. A'(z1) = L5 and
S'(z1) = false)

goal invariant_preserved_10:
not (exists z1:int. A'(z1) = L5 and
B'(z1) = true)

goal invariant_preserved_11:
not (exists z1:int. A'(z1) = L4 and
W'(z1) = false)

goal invariant_preserved_12:
not (exists z1:int. A'(z1) = L4 and
B'(z1) = true)

goal invariant_preserved_13:
not (exists z1,z2:int. z1 <> z2 and A'(z1) = L4 and
A'(z2) = L7)

goal invariant_preserved_14:
not (exists z1,z2:int. z1 <> z2 and A'(z1) = L4 and
A'(z2) = L6)

goal invariant_preserved_15:
not (exists z1:int. A'(z1) = L3 and
W'(z1) = false)

goal invariant_preserved_16:
not (exists z1:int. A'(z1) = L3 and
S'(z1) = false)

goal invariant_preserved_17:
not (exists z1:int. A'(z1) = L3 and
B'(z1) = true)

goal invariant_preserved_18:
not (exists z1,z2:int. z1 <> z2 and A'(z1) = L3 and
A'(z2) = L7)

goal invariant_preserved_19:
not (exists z1,z2:int. z1 <> z2 and A'(z1) = L3 and
A'(z2) = L6)

goal invariant_preserved_20:
not (exists z1:int. A'(z1) = L2 and
W'(z1) = true)

goal invariant_preserved_21:
not (exists z1:int. A'(z1) = L2 and
S'(z1) = true)

goal invariant_preserved_22:
not (exists z1:int. A'(z1) = L2 and
B'(z1) = true)

goal invariant_preserved_23:
not (exists z1,z2:int. z1 <> z2 and A'(z1) = L2 and
A'(z2) = L7)

goal invariant_preserved_24:
not (exists z1,z2:int. z1 <> z2 and A'(z1) = L2 and
A'(z2) = L6)

goal invariant_preserved_25:
not (exists z1,z2:int. z1 <> z2 and A'(z1) = L2 and
A'(z2) = L5)

goal invariant_preserved_26:
not (exists z1:int. A'(z1) = L1 and
W'(z1) = true)

goal invariant_preserved_27:
not (exists z1:int. A'(z1) = L1 and
S'(z1) = true)

goal invariant_preserved_28:
not (exists z1:int. A'(z1) = L0 and
W'(z1) = true)

goal invariant_preserved_29:
not (exists z1:int. A'(z1) = L0 and
S'(z1) = true)

goal invariant_preserved_30:
not (exists z1,z2:int. z1 <> z2 and z1 <= z2 and
A'(z1) = L6 and
A'(z2) = L7)

goal invariant_preserved_31:
not (exists z1,z2:int. z1 <> z2 and z1 <= z2 and
A'(z1) = L5 and
A'(z2) = L7 and
W'(z2) = false)
