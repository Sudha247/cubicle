type msg = R | S | E

array Want[proc] : bool
array Crit[proc] : bool

var W : msg

init (z) { Want[z] = False && Crit[z] = False }

unsafe (z1) { Crit[z1] = False}

transition t1 (i)
requires {Want[i] = False && Crit[i] = False 
         && forall_other j. (Want[j] = True && Crit[j] = False  || Want[j] = False && Crit[j] = False)}
{ Want[i] := True;
  W := case
       | W = R : S
       | W = S : E
       | _ : R;
}

transition t2 (i)
requires {Want[i] = True && Crit[i] = False}
{ Want[i] := False;
  Crit[i] := False;
}