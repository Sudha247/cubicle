

:smt (define-type locations (subrange 0 7))
:smt (define N::nat)

:local a locations
:local s bool
:local w bool
:local b bool
:local cpt nat

:initial 
:var x
:cnj (= a[x] 0) (= s[x] false) (= w[x] false) (= b[x] false) (= cpt[x] 0)
 
:unsafe 
:var x 
:var y
:cnj (= a[x] 7)  (= a[y] 7)
:comment (< x y)
 


:comment t0
:transition
:var x
:var j
:guard (= a[x] 0)
:numcases 2
:case (= x j)
 :val 1
 :val s[j]
 :val w[j]
 :val true
 :val cpt[j]
:case   
 :val a[j]
 :val s[j]
 :val w[j]
 :val b[j]
 :val cpt[j]


:comment t1 
:transition
:var x
:var j
:guard  (= a[x] 1)   
:uguard (= s[j] false) 
:numcases 2
:case (= x j)
 :val 2
 :val s[j]
 :val w[j]
 :val false
 :val cpt[j]
:case  
 :val a[j]
 :val s[j]
 :val w[j]
 :val b[j]
 :val cpt[j]

 
:comment t2
:transition
:var x
:var j
:guard (= a[x] 2)
:numcases 2
:case (= x j)
 :val 3
 :val true
 :val true
 :val b[j]
 :val cpt[j]
:case   
 :val a[j]
 :val s[j]
 :val w[j]
 :val b[j]
 :val cpt[j] 

 
:comment t3_abort_for
:transition
:var x
:var y
:var j
:guard (= a[x] 3) (= cpt[x] y) (= b[y] false) (= w[y] false)
:numcases 2
:case (= x j)
 :val 4
 :val false
 :val w[j]
 :val b[j]
 :val 0
:case   
 :val a[j]
 :val s[j]
 :val w[j]
 :val b[j]
 :val cpt[j] 

:comment t3_incr_for1
:transition
:var x
:var y
:var j
:guard (= a[x] 3) (= cpt[x] y) (= w[y] true)
:numcases 2
:case (= x j)
 :val a[j]
 :val s[j]
 :val w[j]
 :val b[j]
 :val (+ cpt[x] 1)
:case   
 :val a[j]
 :val s[j]
 :val w[j]
 :val b[j]
 :val cpt[j] 

:comment t3_incr_for2
:transition
:var x
:var y
:var j
:guard (= a[x] 3) (= cpt[x] y) (= b[y] true)
:numcases 2
:case (= x j)
 :val a[j]
 :val s[j]
 :val w[j]
 :val b[j]
 :val (+ cpt[x] 1)
:case   
 :val a[j]
 :val s[j]
 :val w[j]
 :val b[j]
 :val cpt[j] 


:comment t3_exit_for
:transition
:var x
:var j
:guard (= a[x] 3) (= cpt[x] N)
:numcases 2
:case (= x j)
 :val 5
 :val s[j]
 :val false
 :val b[j]
 :val 0
:case  
 :val a[j]
 :val s[j]
 :val w[j]
 :val b[j]
 :val cpt[j] 


:comment t4_incr_for1
:transition
:var x
:var y
:var j
:guard (= a[x] 4) (= cpt[x] y) (= s[y] false) 
:numcases 2
:case (= x j)
 :val a[j]
 :val s[j]
 :val w[j]
 :val b[j]
 :val (+ cpt[x] 1)
:case    
 :val a[j]
 :val s[j]
 :val w[j]
 :val b[j]
 :val cpt[j]

:comment t4_incr_for2
:transition
:var x
:var y
:var j
:guard (= a[x] 4) (= cpt[x] y) (= w[y] true) 
:numcases 2
:case (= x j)
 :val a[j]
 :val s[j]
 :val w[j]
 :val b[j]
 :val (+ cpt[x] 1)
:case    
 :val a[j]
 :val s[j]
 :val w[j]
 :val b[j]
 :val cpt[j]

:comment t4_exit_for
:transition
:var x
:var y
:var j
:guard (= a[x] 4)   (= s[y] true) (= w[y] false) 
:numcases 2
:case (= x j)
 :val 5
 :val true
 :val false
 :val b[j]
 :val 0
:case    
 :val a[j]
 :val s[j]
 :val w[j]
 :val b[j]
 :val cpt[j]


:comment t5_enter_for
:transition
:var x
:var y
:var j
:guard (= a[x] 5) (= cpt[x] y) (= w[y] false)
:numcases 2
:case (= x j)
 :val a[j]
 :val s[j]
 :val w[j]
 :val b[j]
 :val (+ cpt[j] 1)
:case  
 :val a[j]
 :val s[j]
 :val w[j]
 :val b[j]
 :val cpt[j]

:comment t5_exit_for
:transition
:var x
:var j
:guard (= a[x] 5) (= cpt[x] N)
:numcases 2
:case (= x j)
 :val 6 
 :val s[j]
 :val w[j]
 :val b[j]
 :val 0
:case  
 :val a[j]
 :val s[j]
 :val w[j]
 :val b[j]
 :val cpt[j]

:comment t6_enter_for
:transition
:var x
:var y
:var j
:guard  (= a[x] 6) (= cpt[x] y) (< y x) (s[y] false)
:numcases 2
:case (= x j)
 :val a[j]
 :val s[j]
 :val w[j]
 :val b[j]
 :val (+ cpt[x] 1)
:case   
 :val a[j]
 :val s[j]
 :val w[j]
 :val b[j]
 :val cpt[j]

:comment t6_exit_for
:transition
:var x
:var j
:guard  (= a[x] 6) (= cpt[x] x)
:numcases 2
:case (= x j)
 :val 7
 :val s[j]
 :val w[j]
 :val b[j]
 :val 0
:case   
 :val a[j]
 :val s[j]
 :val w[j]
 :val b[j]
 :val cpt[j]



:comment t7
:transition
:var x
:var j
:guard (= a[x] 7)
:numcases 2
:case (= x j)
 :val 0
 :val false
 :val w[j]
 :val b[j]
 :val cpt[j]
:case   
 :val a[j]
 :val s[j]
 :val w[j]
 :val b[j]
 :val cpt[j]


