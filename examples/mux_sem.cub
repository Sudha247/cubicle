type location = L1 | L2 | L3 | L4

globals = F[bool]
arrays = A[proc,location]

init (z) { A[z] = L1 }
 
unsafe (z1 z2) { A[z1] = L3 && A[z2] = L3 }

transition t1 (x)
require { A[x] = L1 }
A[j] := {| j = x : L2 | _ : A[j] }

transition t2 (x)
require { A[x] = L2 && F = True }
assign { F := False }
A[j] := {| j = x : L3 | _ : A[j] }

transition t3 (x)
require { A[x] = L3 }
A[j] := {| j = x : L4 | _ : A[j] }

transition t4 (x)
require { A[x] = L4 }
assign { F := True }
A[j] := {| j = x : L1 | _ : A[j] }
