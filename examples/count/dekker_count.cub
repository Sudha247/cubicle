var Turn : proc
array Want[proc] : bool
array Crit[proc] : bool

init (z) { Want[z] = False && Crit[z] = False }

unsafe () { #{z. Crit[z] = True} > 1}

(* trans_regexp : req(z) enter(z); *)

transition req (i)
requires { Want[i] = False }
{ Want[i] := True }

transition enter (i)
requires { Want[i]=True && Crit[i] = False && Turn = i}
{ Crit[i] := True; }

transition exit (i)
requires { Crit[i] = True }
{ 
Turn := . ;
Crit[i] := False; 
Want[i] := False
}


