
type kind = K1 | K2 | K3 | K4

array Kind[proc] : kind
var Seq : int
chan C[N,N] : int

init (p) { Seq = 1 }

invariant (p1 p2) { Kind[p1] = Kind[p2] }

unsafe () { Seq = 5 }

transition t1 ([p])
requires { Kind[p] = K1 && Seq = 1 }
{ Seq := 2; C!1 }

transition t2 ([p])
requires { Kind[p] = K2 && Seq = 4 && C? = 1 }
{ Seq := 5 }

transition t3 ([p])
requires { Kind[p] = K3 && Seq = 3 && C? = 2 }
{ Seq := 4 }

transition t4 ([p])
requires { Kind[p] = K4 && Seq = 2 }
{ Seq := 3; C!2 }
