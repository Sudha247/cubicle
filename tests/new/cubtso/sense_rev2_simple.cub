
number_procs 2

type loc = E0 | E1 | L0 | L1

weak var F1 : bool
weak var F2 : bool
array PC[proc] : loc

init (i) { PC[i] = E0 && F1 = False && F2 = False }

unsafe (i j) { PC[i] = E0 && PC[j] = E1 }


transition t1_1 ()
requires { PC[#1] = E0 }
{ write(#1, F1, True);
  PC[#1] := L0; }

transition t1_2 ()
requires { PC[#1] = L0 && (*read(#1, F1) = True &&*) read(#1, F2) = True }
{ PC[#1] := E1; }

transition t1_3 ()
requires { PC[#1] = E1 }
{ write(#1, F1, False);
  PC[#1] := L1; }

transition t1_4 ()
requires { PC[#1] = L1 && (*read(#1, F1) = False &&*) read(#1, F2) = False }
{ PC[#1] := E0; }


transition t2_1 ()
requires { PC[#2] = E0 }
{ write(#2, F2, True);
  PC[#2] := L0; }

transition t2_2 ()
requires { PC[#2] = L0 && read(#2, F1) = True (*&& read(#2, F2) = True*) }
{ PC[#2] := E1; }

transition t2_3 ()
requires { PC[#2] = E1 }
{ write(#2, F2, False);
  PC[#2] := L1; }

transition t2_4 ()
requires { PC[#2] = L1 && read(#2, F1) = False (*&& read(#2, F2) = False*) }
{ PC[#2] := E0; }
