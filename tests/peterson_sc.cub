
(* SAFE in SC, UNSAFE and TSO *)

number_procs 2

type loc = L1 | L2 | L3 | L4 | End

(* Program counters *)
array PC[proc] : loc

(* Global variables *)
var Want_1 : int
var Want_2 : int
var Turn : int

init () { PC[#1] = L1 && PC[#2] = L1 && Want_1 = 0 && Want_2 = 0 && Turn = 0 }

(* Unsafe state reachable only in TSO *)
unsafe () { PC[#1] = L4 && PC[#2] = L4 }


(* Thread 1 *)

transition t1_L1_L2_store_Want_1 ()
requires { PC[#1] = L1 }
{ PC[#1] := L2; Want_1 := 1 }

transition t1_L2_L3_store_Turn ()
requires { PC[#1] = L2 }
{ PC[#1] := L3; Turn := 2 }

transition t1_L3_L4_load_Want_2 ()
requires { PC[#1] = L3 && Want_2 = 0 }
{ PC[#1] := L4 }

transition t1_L3_L4_load_Turn ()
requires { PC[#1] = L3 && Turn = 1 }
{ PC[#1] := L4 }

(* Critical section *)

transition t1_L4_End_store_Want_1 ()
requires { PC[#1] = L4 }
{ PC[#1] := End; Want_1 := 0 }


(* Thread 2 *)

transition t2_L1_L2_store_Want_2 ()
requires { PC[#2] = L1 }
{ PC[#2] := L2; Want_2 := 1 }

transition t2_L2_L3_store_Turn ()
requires { PC[#2] = L2 }
{ PC[#2] := L3; Turn := 1 }

transition t2_L3_L4_load_Want_1 ()
requires { PC[#2] = L3 && Want_1 = 0 }
{ PC[#2] := L4 }

transition t2_L3_L4_load_Turn ()
requires { PC[#2] = L3 && Turn = 2 }
{ PC[#2] := L4 }

(* Critical section *)

transition t2_L4_End_store_Want_2 ()
requires { PC[#2] = L4 }
{ PC[#2] := End; Want_2 := 0 }


