
(* Simplified Dekker algorithm for N processes *)

type loc = L1 | L2 | CS

(* Program counters *)
array PC[proc] : loc

(* Global variables *)
weak var Turn : proc


init (p) { PC[p] = L1 }

unsafe (p1 p2) { PC[p1] = CS && PC[p2] = CS }


transition req ([p])
requires { PC[p] = L1 }
{ PC[p] := L2 }

transition enter ([p])
requires { PC[p] = L2 && Turn = p }
{ PC[p] := CS }

transition exit ([p] q)
requires { PC[p] = CS }
{ PC[p] := L1; Turn := q }
