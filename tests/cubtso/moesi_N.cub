
type location = M | O | E | S | I

weak array A[proc] : location

init (z) { A[z] = I }

unsafe (z1 z2) { read(z1, A[z1]) = M &&  read(z2, A[z2]) = M }

transition t1 (x)
requires { read(x, A[x]) = E }
{ write(x, A[x], M) }

transition t2 (x)
requires { read(x, A[x]) = I }
{ write(x, A[j],  case 
           | j = x : S 
	   | read(x, A[j]) = E : S 
	   | read(x, A[j]) = M : O )
}
  
transition t3 (x)
requires { read(x, A[x]) = S }
{ write(x, A[j], case | j = x : E | _ : I) }

transition t4 (x)
requires { read(x, A[x]) = O }
{ write(x, A[j], case | j = x : E | _ : I) }

transition t5 (x)
requires { read(x, A[x]) = I }
{ write(x, A[j], case | j = x : E | _ : I) }


