
(* Sense-reversing barrier algorithm *)

type loc = E0 | E1 | L0 | L1

(* Program counters *)
array PC[proc] : loc

(* Global variables *)
weak array F[proc] : bool


init (i) { PC[i] = E0 && F[i] = False }

unsafe (i j) { PC[i] = E0 && PC[j] = E1 }


transition t1([i])
requires { PC[i] = E0 }
{ PC[i] := L0; F[i] := True }

transition t2([i])
requires { PC[i] = L0 && (*F[i] = True &&*) forall_other j. F[j] = True }
{ PC[i] := E1 }

transition t3([i])
requires { PC[i] = E1 }
{ PC[i] := L1; F[i] := False }

transition t4([i])
requires { PC[i] = L1 && (*F[i] = False &&*) forall_other j. F[j] = False }
{ PC[i] := E0 }
