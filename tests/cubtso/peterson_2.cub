
number_procs 2

type loc = L1 | L2 | L3 | CS | End

(* Program counters *)
array PC[proc] : loc

(* Global variables *)
weak array Want[proc] : bool
weak var Turn : proc


init (p) { PC[p] = L1 && Want[p] = False }

unsafe (p1 p2) { PC[p1] = CS && PC[p2] = CS }


transition t_L1_L2_W_WantS_True ([p])
requires { PC[p] = L1 }
{ PC[p] := L2; Want[p] := True }

transition t_L2_L3_W_Turn_Other ([p] q)
requires { PC[p] = L2 }
{ PC[p] := L3; Turn := q }

transition t_L3_CS_R_WantO_False ([p] q)
requires { fence() && PC[p] = L3 && Want[q] = False }
{ PC[p] := CS }

transition t_L3_CS_R_Turn_Self ([p])
requires { PC[p] = L3 && Turn = p }
{ PC[p] := CS }

(* Critical section *)

transition t_CS_L1_W_WantS_False ([p])
requires { PC[p] = CS }
{ PC[p] := L1; Want[p] := False }
