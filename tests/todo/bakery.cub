
type t = Idle | Wait | Crit | Crash

weak array A[proc] : t

init (z) { A[z] = Idle }
unsafe (z1 z2) { z1 @ A[z1] = Crit && z2 @ A[z2] = Crit }

transition tr1 ([z])
requires { A[z] = Idle }
{ A[j] := case
  | j = z : Wait
  | j < z : A[j]
  | z < j && A[j] = Idle : A[j]
  | _ : Crash
}

transition tr2 ([z])
requires { A[z] = Wait }
{ A[j] := case
  | j = z : Crit
  | z < j : A[j]
  | j < z && A[j] = Idle : Idle
  | _ : Crash
}


transition tr3 ([z])
requires { A[z] = Crit }
{ A[j] := case | j = z : Idle }
