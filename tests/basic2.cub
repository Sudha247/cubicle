
type pc = L1 | L2 | End

weak var X : int
var R : int
array PC[proc] : pc

unsafe (p) { PC[p] = End && R = 1 }

init (p) { PC[p] = L1 && X = 0 && R = 0 }

transition t1 (p)
requires { PC[p] = L1 }
{ PC[p] := L2; R := read(p, X) }

transition t2inf (p)
requires { PC[p] = L2 && R < 1 }
{ PC[p] := L1; write(p, X, R + 1); }

transition t2sup (p)
requires { PC[p] = L2 && R = 1 }
{ PC[p] := End;  }
