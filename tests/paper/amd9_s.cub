
(* Test amd9 *)

number_procs 2

type loc = L1 | L2 | L3 | End

array PC[proc] : loc

array EAX[proc] : int
array EBX[proc] : int
array ECX[proc] : int
array EDX[proc] : int

weak var X : int
weak var Y : int

init (p) {
    PC[p] = L1 &&
    EAX[p] = 0 && EBX[p] = 0 && ECX[p] = 0 && EDX[p] = 0 &&
    X = 0 && Y = 0 }

(* FORBIDDEN Final State *)
unsafe (p1 p2) { p1 = #1 && p2 = #2 &&
       	       	 PC[p1] = End && PC[p2] = End &&
		 EBX[p1] = 0 && EDX[p2] = 0 }

transition t1_1 ([p])
requires { p = #1 && PC[p] = L1 }
{ PC[p] := L2; X := 1 }

transition t1_2 ([p])
requires { p = #1 && fence() && PC[p] = L2 }
{ PC[p] := L3; EAX[p] := X }

transition t1_3 ([p])
requires { p = #1 && PC[p] = L3 }
{ PC[p] := End; EBX[p] := Y }

transition t2_1 ([p])
requires { p = #2 && PC[p] = L1 }
{ PC[p] := L2; Y := 1 }

transition t2_2 ([p])
requires { p = #2 && fence() && PC[p] = L2 }
{ PC[p] := L3; ECX[p] := Y }

transition t2_3 ([p])
requires { p = #2 && PC[p] = L3 }
{ PC[p] := End; EDX[p] := X }
