
(* Test amd3 *)

number_procs 2

type loc = L1 | L2 | L3 | End

array PC[proc] : loc

array EAX[proc] : int
array EBX[proc] : int

weak var X : int
weak var Y : int

init (p) { PC[p] = L1 && EAX[p] = 0 && EBX[p] = 0 && X = 0 && Y = 0 }

(* ALLOWED Final State *)
unsafe (p1 p2) { p1 = #1 && p2 = #2 &&
       	       	 PC[p1] = End && PC[p2] = End &&
		 EAX[p1] = 1 && EBX[p2] = 1 }

transition t1_1 (p)
requires { p = #1 && PC[p] = L1 }
{ PC[p] := L2; write(p, X, 1) }

transition t1_2 (p)
requires { p = #1 && PC[p] = L2 }
{ PC[p] := L3; write(p, X, 2) }

transition t1_3 (p)
requires { p = #1 && PC[p] = L3 }
{ PC[p] := End; EAX[p] := read(p, Y) }

transition t2_1 (p)
requires { p = #2 && PC[p] = L1 }
{ PC[p] := L2; write(p, Y, 1) }

transition t2_2 (p)
requires { p = #2 && PC[p] = L2 }
{ PC[p] := L3; write(p, Y, 2) }

transition t2_3 (p)
requires { p = #2 && PC[p] = L3 }
{ PC[p] := End; EBX[p] := read(p, X) }
