
type st = M | S | I

array Cache[proc] : st

init (i) { Cache[i] = I }

unsafe (i j) { Cache[i] = M && Cache[j] <> I }

transition read_miss (i)
requires { Cache[i] = I }
{ Cache[j] := case
       	   | j = i : S
       	   | Cache[j] = M  : S
	   | _ : Cache[j] }

transition write_miss (i)
requires { Cache[i] <> M }
{ Cache[j] := case
       	   | j = i : M
	   | _ : I }
