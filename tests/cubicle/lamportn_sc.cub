
type loc =  L1 | L2 | L3 | L4 | L5 | CS

(* Program counters *)
array PC[proc] : loc

(* Global variables *)
var X : int
var Y : int

(* Process IDs *)
array ProcID[proc] : int
var NullProc : int

init (p) { PC[p] = L1 }

invariant (p1 p2) { ProcID[p1] = ProcID[p2] }
invariant (p) { NullProc = ProcID[p] }

unsafe (p1 p2) { PC[p1] = CS && PC[p2] = CS }


transition t_L1_L2_W_X_Self (p)
requires { PC[p] = L1 }
{ PC[p] := L2; X := ProcID[p] }

transition t_L2_L1_Y_NotNull (p)
requires { PC[p] = L2 && Y <> NullProc }
{ PC[p] := L1 }

transition t_L2_L3_Y_Null (p)
requires { PC[p] = L2 && Y = NullProc }
{ PC[p] := L3 }

transition t_L3_L4_W_Y_Self (p)
requires { PC[p] = L3 }
{ PC[p] := L4; Y := ProcID[p] }

transition t_L4_L5_X_Other (p)
requires { PC[p] = L4 && X <> ProcID[p] }
{ PC[p] := L5 }

transition t_L5_L1_Y_Other (p)
requires { PC[p] = L5 && Y <> ProcID[p] }
{ PC[p] := L1 }

transition t_L4_CS_X_Self (p)
requires { PC[p] = L4 && X = ProcID[p] }
{ PC[p] := CS }

(* Critical section *)

transition t_CS_L1_W_Y_Null (p)
requires { PC[p] = CS }
{ PC[p] := L1; Y := NullProc }
