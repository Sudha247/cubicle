
number_procs 2

type loc = L1 | L2 | L3 | L4 | L5 | L6 | L7 | L8

(* Program counters *)
array PC[proc] : loc

(* Global variables *)
weak var Want1 : int
weak var Want2 : int
weak var Turn : int

init (p) { PC[p] = L1 && Want1 = 0 && Want2 = 0 && Turn = 1 }

unsafe (p1 p2) { PC[p1] = L7 && PC[p2] = L7 }


(* Thread 1 *)

transition t1_L1_L2_W_Want1_True ()
requires { PC[#1] = L1 }
{ PC[#1] := L2; write(#1, Want1, 1) }

transition t1_L2_L3_R_Want2_True ()
requires { PC[#1] = L2 && read(#1, Want2) = 1 }
{ PC[#1] := L3 }

transition t1_L2_L7_R_Want2_False ()
requires { PC[#1] = L2 && read(#1, Want2) = 0 }
{ PC[#1] := L7 }

transition t1_L3_L4_R_Turn_Other ()
requires { PC[#1] = L3 && read(#1, Turn) <> 1 }
{ PC[#1] := L4 }

transition t1_L5_L2_R_Turn_Self ()
requires { PC[#1] = L3 && read(#1, Turn) = 1 }
{ PC[#1] := L2 }

transition t1_L4_L5_W_Want1_False ()
requires { PC[#1] = L4 }
{ PC[#1] := L5; write(#1, Want1, 0) }

transition t1_L5_L5_R_Turn_Other ()
requires { PC[#1] = L5 && read(#1, Turn) <> 1 }
{ PC[#1] := L5 }

transition t1_L5_L6_R_Turn_Self ()
requires { PC[#1] = L5 && read(#1, Turn) = 1 }
{ PC[#1] := L6 }

transition t1_L6_L2_W_Want1_True ()
requires { PC[#1] = L6 }
{ PC[#1] := L2; write(#1, Want1, 1) }

(* Critical section *)

transition t1_L7_L8_W_Turn_Other ()
requires { PC[#1] = L7 }
{ PC[#1] := L8; write(#1, Turn, 2) }

transition t1_L8_L1_W_Want1_False ()
requires { PC[#1] = L8 }
{ PC[#1] := L1; write(#1, Want1, 0) }


(* Thread 2 *)

transition t2_L1_L2_W_Want2_True ()
requires { PC[#2] = L1 }
{ PC[#2] := L2; write(#2, Want2, 1) }

transition t2_L2_L3_R_Want1_True ()
requires { PC[#2] = L2 && read(#2, Want1) = 1 }
{ PC[#2] := L3 }

transition t2_L2_L7_R_Want1_False ()
requires { PC[#2] = L2 && read(#2, Want1) = 0 }
{ PC[#2] := L7 }

transition t2_L3_L4_R_Turn_Other ()
requires { PC[#2] = L3 && read(#2, Turn) <> 2 }
{ PC[#2] := L4 }

transition t2_L5_L2_R_Turn_Self ()
requires { PC[#2] = L3 && read(#2, Turn) = 2 }
{ PC[#2] := L2 }

transition t2_L4_L5_W_Want2_False ()
requires { PC[#2] = L4 }
{ PC[#2] := L5; write(#2, Want2, 0) }

transition t2_L5_L5_R_Turn_Other ()
requires { PC[#2] = L5 && read(#2, Turn) <> 2 }
{ PC[#2] := L5 }

transition t2_L5_L6_R_Turn_Self ()
requires { PC[#2] = L5 && read(#2, Turn) = 2 }
{ PC[#2] := L6 }

transition t2_L6_L2_W_Want2_True ()
requires { PC[#2] = L6 }
{ PC[#2] := L2; write(#2, Want2, 1) }

(* Critical section *)

transition t2_L7_L8_W_Turn_Other ()
requires { PC[#2] = L7 }
{ PC[#2] := L8; write(#2, Turn, 1) }

transition t2_L8_L1_W_Want2_False ()
requires { PC[#2] = L8 }
{ PC[#2] := L1; write(#2, Want2, 0) }

