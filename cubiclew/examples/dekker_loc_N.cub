
type loc = L1 | L2 | L3

(* Program counters *)
array PC[proc] : loc

(* Global variables *)
weak var Turn : proc


init (z) { PC[z] = L1 }

unsafe (z1 z2) { PC[z1] = L3 && PC[z2] = L3 }


transition req ([i])
requires { PC[i] = L1 }
{ PC[i] := L2 }

transition enter ([i])
requires { PC[i] = L2 && Turn = i }
{ PC[i] := L3 }

transition exit ([i] j)
requires { PC[i] = L3 }
{ PC[i] := L1; Turn := j }
